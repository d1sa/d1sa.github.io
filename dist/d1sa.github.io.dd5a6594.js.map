{"mappings":"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","sources":["<anon>","src/lead-form.js"],"sourcesContent":["// ==========================================================================\n// Lead Form Functionality\n// ==========================================================================\ndocument.addEventListener('DOMContentLoaded', function() {\n    const leadForm = document.getElementById('leadForm');\n    const phoneInput = document.getElementById('phoneInput');\n    const successMessage = document.getElementById('successMessage');\n    // Phone input formatting\n    phoneInput.addEventListener('input', function(e) {\n        let value = e.target.value;\n        // Remove all non-digit characters except +\n        value = value.replace(/[^\\d+]/g, '');\n        // Ensure it starts with +7\n        if (!value.startsWith('+7')) value = '+7';\n        // Format the phone number\n        if (value.length > 2) {\n            const phoneNumber = value.slice(2); // Remove +7\n            let formatted = '+7';\n            if (phoneNumber.length > 0) formatted += ' (' + phoneNumber.slice(0, 3);\n            if (phoneNumber.length > 3) formatted += ') ' + phoneNumber.slice(3, 6);\n            if (phoneNumber.length > 6) formatted += '-' + phoneNumber.slice(6, 8);\n            if (phoneNumber.length > 8) formatted += '-' + phoneNumber.slice(8, 10);\n            // Limit to 10 digits after +7\n            if (phoneNumber.length <= 10) value = formatted;\n            else value = e.target.value; // Keep previous value if too long\n        }\n        e.target.value = value;\n    });\n    // Form submission\n    leadForm.addEventListener('submit', function(e) {\n        e.preventDefault();\n        const phoneValue = phoneInput.value;\n        // Basic validation - check for proper phone format\n        const phoneDigits = phoneValue.replace(/[^\\d]/g, '');\n        if (phoneDigits.length < 11 || !phoneValue.startsWith('+7')) {\n            phoneInput.style.borderColor = '#ff4444';\n            phoneInput.style.background = '#ffebeb';\n            // Reset error styling after 3 seconds\n            setTimeout(()=>{\n                phoneInput.style.borderColor = '';\n                phoneInput.style.background = '#e8edf4';\n            }, 3000);\n            alert(\"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 (+7 \\u0438 10 \\u0446\\u0438\\u0444\\u0440)\");\n            return;\n        }\n        // Simulate form submission\n        const submitBtn = leadForm.querySelector('.submit-btn');\n        const originalText = submitBtn.textContent;\n        // Show loading state\n        submitBtn.textContent = \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430...\";\n        submitBtn.disabled = true;\n        submitBtn.style.opacity = '0.7';\n        // Simulate API call delay\n        setTimeout(()=>{\n            // Hide form and show success message\n            leadForm.style.display = 'none';\n            successMessage.style.display = 'flex';\n            // Reset button state (in case user wants to submit again)\n            submitBtn.textContent = originalText;\n            submitBtn.disabled = false;\n            submitBtn.style.opacity = '1';\n            // Optional: Reset form after showing success\n            setTimeout(()=>{\n                leadForm.reset();\n                phoneInput.value = '+7';\n            }, 100);\n        }, 1500); // 1.5 second delay to simulate network request\n    });\n    // Initialize phone input with +7\n    if (phoneInput.value === '' || phoneInput.value === '+7') phoneInput.value = '+7';\n});\n// ==========================================================================\n// Review Lead Form Functionality\n// ==========================================================================\ndocument.addEventListener('DOMContentLoaded', function() {\n    const reviewLeadForm = document.getElementById('reviewLeadForm');\n    const reviewNameInput = document.getElementById('reviewNameInput');\n    const reviewPhoneInput = document.getElementById('reviewPhoneInput');\n    const reviewSuccessMessage = document.getElementById('reviewSuccessMessage');\n    // Check if elements exist before adding event listeners\n    if (!reviewLeadForm || !reviewNameInput || !reviewPhoneInput || !reviewSuccessMessage) return; // Exit if form elements don't exist\n    // Phone input formatting for review form\n    reviewPhoneInput.addEventListener('input', function(e) {\n        let value = e.target.value;\n        // Remove all non-digit characters except +\n        value = value.replace(/[^\\d+]/g, '');\n        // Ensure it starts with +7\n        if (!value.startsWith('+7')) value = '+7';\n        // Format the phone number\n        if (value.length > 2) {\n            const phoneNumber = value.slice(2); // Remove +7\n            let formatted = '+7';\n            if (phoneNumber.length > 0) formatted += ' (' + phoneNumber.slice(0, 3);\n            if (phoneNumber.length > 3) formatted += ') ' + phoneNumber.slice(3, 6);\n            if (phoneNumber.length > 6) formatted += '-' + phoneNumber.slice(6, 8);\n            if (phoneNumber.length > 8) formatted += '-' + phoneNumber.slice(8, 10);\n            // Limit to 10 digits after +7\n            if (phoneNumber.length <= 10) value = formatted;\n            else value = e.target.value; // Keep previous value if too long\n        }\n        e.target.value = value;\n    });\n    // Form submission for review form\n    reviewLeadForm.addEventListener('submit', function(e) {\n        e.preventDefault();\n        const nameValue = reviewNameInput.value.trim();\n        const phoneValue = reviewPhoneInput.value;\n        // Validation\n        let hasErrors = false;\n        // Name validation\n        if (nameValue.length < 2) {\n            reviewNameInput.classList.add('error');\n            hasErrors = true;\n        } else reviewNameInput.classList.remove('error');\n        // Phone validation\n        const phoneDigits = phoneValue.replace(/[^\\d]/g, '');\n        if (phoneDigits.length < 11 || !phoneValue.startsWith('+7')) {\n            reviewPhoneInput.classList.add('error');\n            hasErrors = true;\n        } else reviewPhoneInput.classList.remove('error');\n        if (hasErrors) {\n            // Reset error styling after 3 seconds\n            setTimeout(()=>{\n                reviewNameInput.classList.remove('error');\n                reviewPhoneInput.classList.remove('error');\n            }, 3000);\n            alert(\"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u0432\\u0441\\u0435 \\u043F\\u043E\\u043B\\u044F \\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u043D\\u043E\");\n            return;\n        }\n        // Simulate form submission\n        const submitBtn = reviewLeadForm.querySelector('.submit-button');\n        const originalText = submitBtn.textContent;\n        // Show loading state\n        submitBtn.textContent = \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430...\";\n        submitBtn.disabled = true;\n        // Simulate API call delay\n        setTimeout(()=>{\n            // Hide form and show success message\n            reviewLeadForm.style.display = 'none';\n            reviewSuccessMessage.style.display = 'flex';\n            // Reset button state (in case user wants to submit again)\n            submitBtn.textContent = originalText;\n            submitBtn.disabled = false;\n            // Optional: Reset form after showing success\n            setTimeout(()=>{\n                reviewLeadForm.reset();\n                reviewPhoneInput.value = '+7';\n            }, 100);\n        }, 1500); // 1.5 second delay to simulate network request\n    });\n    // Initialize phone input with +7\n    if (reviewPhoneInput.value === '' || reviewPhoneInput.value === '+7') reviewPhoneInput.value = '+7';\n});\n\n//# sourceMappingURL=d1sa.github.io.dd5a6594.js.map\n","// ==========================================================================\r\n// Lead Form Functionality\r\n// ==========================================================================\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  const leadForm = document.getElementById('leadForm');\r\n  const phoneInput = document.getElementById('phoneInput');\r\n  const successMessage = document.getElementById('successMessage');\r\n\r\n  // Phone input formatting\r\n  phoneInput.addEventListener('input', function (e) {\r\n    let value = e.target.value;\r\n\r\n    // Remove all non-digit characters except +\r\n    value = value.replace(/[^\\d+]/g, '');\r\n\r\n    // Ensure it starts with +7\r\n    if (!value.startsWith('+7')) {\r\n      value = '+7';\r\n    }\r\n\r\n    // Format the phone number\r\n    if (value.length > 2) {\r\n      const phoneNumber = value.slice(2); // Remove +7\r\n      let formatted = '+7';\r\n\r\n      if (phoneNumber.length > 0) {\r\n        formatted += ' (' + phoneNumber.slice(0, 3);\r\n      }\r\n      if (phoneNumber.length > 3) {\r\n        formatted += ') ' + phoneNumber.slice(3, 6);\r\n      }\r\n      if (phoneNumber.length > 6) {\r\n        formatted += '-' + phoneNumber.slice(6, 8);\r\n      }\r\n      if (phoneNumber.length > 8) {\r\n        formatted += '-' + phoneNumber.slice(8, 10);\r\n      }\r\n\r\n      // Limit to 10 digits after +7\r\n      if (phoneNumber.length <= 10) {\r\n        value = formatted;\r\n      } else {\r\n        value = e.target.value; // Keep previous value if too long\r\n      }\r\n    }\r\n\r\n    e.target.value = value;\r\n  });\r\n\r\n  // Form submission\r\n  leadForm.addEventListener('submit', function (e) {\r\n    e.preventDefault();\r\n\r\n    const phoneValue = phoneInput.value;\r\n\r\n    // Basic validation - check for proper phone format\r\n    const phoneDigits = phoneValue.replace(/[^\\d]/g, '');\r\n    if (phoneDigits.length < 11 || !phoneValue.startsWith('+7')) {\r\n      phoneInput.style.borderColor = '#ff4444';\r\n      phoneInput.style.background = '#ffebeb';\r\n\r\n      // Reset error styling after 3 seconds\r\n      setTimeout(() => {\r\n        phoneInput.style.borderColor = '';\r\n        phoneInput.style.background = '#e8edf4';\r\n      }, 3000);\r\n\r\n      alert('Пожалуйста, введите корректный номер телефона (+7 и 10 цифр)');\r\n      return;\r\n    }\r\n\r\n    // Simulate form submission\r\n    const submitBtn = leadForm.querySelector('.submit-btn');\r\n    const originalText = submitBtn.textContent;\r\n\r\n    // Show loading state\r\n    submitBtn.textContent = 'Отправка...';\r\n    submitBtn.disabled = true;\r\n    submitBtn.style.opacity = '0.7';\r\n\r\n    // Simulate API call delay\r\n    setTimeout(() => {\r\n      // Hide form and show success message\r\n      leadForm.style.display = 'none';\r\n      successMessage.style.display = 'flex';\r\n\r\n      // Reset button state (in case user wants to submit again)\r\n      submitBtn.textContent = originalText;\r\n      submitBtn.disabled = false;\r\n      submitBtn.style.opacity = '1';\r\n\r\n      // Optional: Reset form after showing success\r\n      setTimeout(() => {\r\n        leadForm.reset();\r\n        phoneInput.value = '+7';\r\n      }, 100);\r\n    }, 1500); // 1.5 second delay to simulate network request\r\n  });\r\n\r\n  // Initialize phone input with +7\r\n  if (phoneInput.value === '' || phoneInput.value === '+7') {\r\n    phoneInput.value = '+7';\r\n  }\r\n});\r\n\r\n// ==========================================================================\r\n// Review Lead Form Functionality\r\n// ==========================================================================\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  const reviewLeadForm = document.getElementById('reviewLeadForm');\r\n  const reviewNameInput = document.getElementById('reviewNameInput');\r\n  const reviewPhoneInput = document.getElementById('reviewPhoneInput');\r\n  const reviewSuccessMessage = document.getElementById('reviewSuccessMessage');\r\n\r\n  // Check if elements exist before adding event listeners\r\n  if (\r\n    !reviewLeadForm ||\r\n    !reviewNameInput ||\r\n    !reviewPhoneInput ||\r\n    !reviewSuccessMessage\r\n  ) {\r\n    return; // Exit if form elements don't exist\r\n  }\r\n\r\n  // Phone input formatting for review form\r\n  reviewPhoneInput.addEventListener('input', function (e) {\r\n    let value = e.target.value;\r\n\r\n    // Remove all non-digit characters except +\r\n    value = value.replace(/[^\\d+]/g, '');\r\n\r\n    // Ensure it starts with +7\r\n    if (!value.startsWith('+7')) {\r\n      value = '+7';\r\n    }\r\n\r\n    // Format the phone number\r\n    if (value.length > 2) {\r\n      const phoneNumber = value.slice(2); // Remove +7\r\n      let formatted = '+7';\r\n\r\n      if (phoneNumber.length > 0) {\r\n        formatted += ' (' + phoneNumber.slice(0, 3);\r\n      }\r\n      if (phoneNumber.length > 3) {\r\n        formatted += ') ' + phoneNumber.slice(3, 6);\r\n      }\r\n      if (phoneNumber.length > 6) {\r\n        formatted += '-' + phoneNumber.slice(6, 8);\r\n      }\r\n      if (phoneNumber.length > 8) {\r\n        formatted += '-' + phoneNumber.slice(8, 10);\r\n      }\r\n\r\n      // Limit to 10 digits after +7\r\n      if (phoneNumber.length <= 10) {\r\n        value = formatted;\r\n      } else {\r\n        value = e.target.value; // Keep previous value if too long\r\n      }\r\n    }\r\n\r\n    e.target.value = value;\r\n  });\r\n\r\n  // Form submission for review form\r\n  reviewLeadForm.addEventListener('submit', function (e) {\r\n    e.preventDefault();\r\n\r\n    const nameValue = reviewNameInput.value.trim();\r\n    const phoneValue = reviewPhoneInput.value;\r\n\r\n    // Validation\r\n    let hasErrors = false;\r\n\r\n    // Name validation\r\n    if (nameValue.length < 2) {\r\n      reviewNameInput.classList.add('error');\r\n      hasErrors = true;\r\n    } else {\r\n      reviewNameInput.classList.remove('error');\r\n    }\r\n\r\n    // Phone validation\r\n    const phoneDigits = phoneValue.replace(/[^\\d]/g, '');\r\n    if (phoneDigits.length < 11 || !phoneValue.startsWith('+7')) {\r\n      reviewPhoneInput.classList.add('error');\r\n      hasErrors = true;\r\n    } else {\r\n      reviewPhoneInput.classList.remove('error');\r\n    }\r\n\r\n    if (hasErrors) {\r\n      // Reset error styling after 3 seconds\r\n      setTimeout(() => {\r\n        reviewNameInput.classList.remove('error');\r\n        reviewPhoneInput.classList.remove('error');\r\n      }, 3000);\r\n\r\n      alert('Пожалуйста, заполните все поля корректно');\r\n      return;\r\n    }\r\n\r\n    // Simulate form submission\r\n    const submitBtn = reviewLeadForm.querySelector('.submit-button');\r\n    const originalText = submitBtn.textContent;\r\n\r\n    // Show loading state\r\n    submitBtn.textContent = 'Отправка...';\r\n    submitBtn.disabled = true;\r\n\r\n    // Simulate API call delay\r\n    setTimeout(() => {\r\n      // Hide form and show success message\r\n      reviewLeadForm.style.display = 'none';\r\n      reviewSuccessMessage.style.display = 'flex';\r\n\r\n      // Reset button state (in case user wants to submit again)\r\n      submitBtn.textContent = originalText;\r\n      submitBtn.disabled = false;\r\n\r\n      // Optional: Reset form after showing success\r\n      setTimeout(() => {\r\n        reviewLeadForm.reset();\r\n        reviewPhoneInput.value = '+7';\r\n      }, 100);\r\n    }, 1500); // 1.5 second delay to simulate network request\r\n  });\r\n\r\n  // Initialize phone input with +7\r\n  if (reviewPhoneInput.value === '' || reviewPhoneInput.value === '+7') {\r\n    reviewPhoneInput.value = '+7';\r\n  }\r\n});\r\n"],"names":["document","addEventListener","leadForm","getElementById","phoneInput","successMessage","e","value","target","replace","startsWith","length","phoneNumber","slice","formatted","preventDefault","phoneValue","phoneDigits","style","borderColor","background","setTimeout","alert","submitBtn","querySelector","originalText","textContent","disabled","opacity","display","reset","reviewLeadForm","reviewNameInput","reviewPhoneInput","reviewSuccessMessage","nameValue","trim","hasErrors","classList","add","remove"],"version":3,"file":"d1sa.github.io.dd5a6594.js.map"}