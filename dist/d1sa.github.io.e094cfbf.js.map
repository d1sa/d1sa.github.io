{"mappings":"AASAA,SAASC,iBAAiB,mBAAoB,WAC5C,SAASC,IACP,MAAMC,EAASH,SAASI,cAAc,WACtC,GAAID,EAAQ,CACV,MAAME,EAAeC,KAAKC,MAAMJ,EAAOK,cACnCH,EAAe,IACjBL,SAASS,KAAKC,MAAMC,WAAaN,EAAe,KAEpD,CACF,CAMA,IAAIO,EAHJV,IAIAW,OAAOZ,iBAAiB,SAAU,WAChCa,aAAaF,GACbA,EAAgBG,WAAWb,EAAmB,IAChD,GAGAW,OAAOZ,iBAAiB,oBAAqB,WAC3Cc,WAAWb,EAAmB,IAChC,EACF,GCzBA,MAAMc,EAAkB,CACtBC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,KAAM,OACN,SAAIC,GACF,MAAO,GAAGC,KAAKL,UAAUK,KAAKJ,QAChC,GAIIK,EAAKV,OAAOW,GACbD,GACHE,QAAQC,IAAI,6BAId,MAAMC,EAAe,CACnBC,IAAK,qBACLC,KAAM,MACNC,MAAO,yBAIHC,EACG,YADHA,EAEQ,iBAFRA,EAGM,eAHNA,EAIM,eAINC,EAAkB,IAAIC,IAUtBC,EAAmBC,IACvB,MAEMC,EAFMD,EAAEE,OAAOC,MACFC,QAAQ,MAAO,IACbH,MAAM,8CAE3B,IAAII,EAAS,MAETJ,EAAM,KACRI,GAAU,IAAMJ,EAAM,GAClBA,EAAM,IAAMA,EAAM,KACpBI,GAAU,MAIVJ,EAAM,KACRI,GAAU,IAAMJ,EAAM,IAGpBA,EAAM,KACRI,GAAU,IAAMJ,EAAM,IAGpBA,EAAM,KACRI,GAAU,IAAMJ,EAAM,IAGxBD,EAAEE,OAAOC,MAAQE,GAQbC,EAAgBC,GAElB,sFACWC,KAAKD,GAQdE,EAAeC,GACZlB,EAAakB,IAAQA,EAiExBC,EAAW,EAACC,QAAEA,EAAOC,SAAEA,MAOzBvB,QAAQC,IAAI,gDA7DO,GAACqB,QAAEA,EAAOC,SAAEA,MACjC,MAAM3B,MAAEA,EAAKF,OAAEA,EAAMC,KAAEA,GAASJ,EAC1BiC,EAAiBC,UAAUH,GAGjCI,MAFY,+BAA+B9B,yBAA6BF,gBAAqBC,UAAa6B,KAGvGG,KAAKC,GAAOA,EAAIC,QAChBF,KAAKC,IACJ5B,QAAQC,IAAI,yBAA0B2B,GAElCA,EAAIE,KACNC,EAAwBR,GACxBS,aAAaC,QAAQ,cAAc,GAGnCC,EAAmBX,EAASY,SAG/BC,MAAMC,IACLrC,QAAQqC,MAAM,0BAA2BA,GAEzCN,EAAwBR,MAyC1Be,CAAe,C,QAAEhB,E,SAASC,KAQxBW,EAAqBX,IACzB,IAAKzB,EAAI,OAET,MAMMyC,EANU,CACdC,CAAClC,GAAmB,UACpBmC,CAACnC,GAAsB,UACvBoC,CAACpC,GAAsB,WAGJiB,GACjBgB,GACFzC,EAAG,SAAU,YAAayC,IAaxBI,EAAmBpB,GAAYb,IAInC,GAHAA,EAAEkC,iBAGErB,EAASY,OAAS7B,GAA0C,oBAAfuC,WAA4B,CAE3E,GAAwB,IADPA,WAAWC,cACfC,OAEX,OADAC,MAAM,8CACC,CAEX,CAEA,MAAMC,EAAOvC,EAAEE,QACTsC,SAAEA,GAAa3B,EAGf4B,EAAkBF,EAAKtE,cAAc,oBACvCwE,GACFA,EAAgBC,SAIlB,IAAI9B,EAAU,wDAEd,MAAM+B,EAAW,IAAIC,SAASL,GACxBM,EAAa,CAAEC,SAAS,EAAMC,OAAQ,IAG5C,IAAK,IAAKrC,EAAKP,KAAUwC,EAASK,UAAW,CAC3C,GAAY,yBAARtC,EAAgC,SAEpC,MAAMuC,EAAe9C,EAAM+C,OACtBD,IAGO,QAARvC,IACGJ,EAAc2C,KACjBJ,EAAWC,SAAU,EACrBD,EAAWE,OAAOI,KAAK,gCAIf,SAARzC,GACEuC,EAAaZ,OAAS,IACxBQ,EAAWC,SAAU,EACrBD,EAAWE,OAAOI,KAAK,6BAK3BvC,GAAW,MAAMH,EAAaC,cAAgBuC,UAChD,CAEArC,GAAW,UAAU4B,EAAW,IAAIA,KAAc,SAG7CK,EAAWC,QAMhBnC,EAAS,C,QAAEC,E,SAASC,IALlBuC,EAAeP,EAAYhC,IAazBuC,EAAiB,CAACP,EAAYhC,KAClC,MAAMwC,MAAEA,GAAUxC,EACZyC,EACe,SAAnBD,EAAME,SAAsBF,EAAQA,EAAMpF,cAAc,iBAE1D,IAAIwE,EAAkBa,EAASrF,cAAc,oBAE7C,IAAKwE,EAAiB,CACpBA,EAAkB5E,SAAS2F,cAAc,OACzCf,EAAgBgB,UAAY,kBAG5B,MAAMC,EAAaJ,EAASrF,cAAc,gBACtCyF,EACFJ,EAASK,aAAalB,EAAiBiB,GAEvCJ,EAASM,YAAYnB,EAEzB,CAEAA,EAAgBoB,UAAY,GAC5BhB,EAAWE,OAAOe,QAAQnC,IACxB,MAAMoC,EAAUlG,SAAS2F,cAAc,OACvCO,EAAQN,UAAY,YACpBM,EAAQC,YAAcrC,EACtBc,EAAgBmB,YAAYG,MAQ1B1C,EAA0BR,IAC9B,MAAMY,KAAEA,EAAI4B,MAAEA,GAAUxC,EAElBoD,EAAmB,CACvBnC,CAAClC,GAAmB,oRAOpBsE,CAACtE,GAAwB,gKAMzBuE,QAAS,iKAQLC,EAAWH,EAAiBxC,IAASwC,EAAiBE,QAO5D,IALqB,SAAnBd,EAAME,SAAsBF,EAAQA,EAAMpF,cAAc,kBAEjD4F,UAAYO,EAGjB3C,IAAS7B,EAAkB,CACRyD,EAAMgB,iBAAiB,uBAC/BP,QAAQQ,IACnBA,EAAOxG,iBAAiB,QAASkC,IAC/BA,EAAEkC,iBACFqC,EAAUlB,MAGhB,GAiEIkB,EAAYlB,IAChBA,EAAMmB,UAAU9B,OAAO,SAalB,SAAS+B,EAAaC,EAAQC,EAAQC,EAAU,CAAC,GACtD,MAAMrC,EAAO1E,SAASgH,eAAeH,GACrC,IAAKnC,EAEH,YADAjD,QAAQwF,KAAK,iBAAiBJ,gBAIhC,MAAMK,EAAS,C,OACbJ,E,QACAC,EACAI,QAASzC,EACTd,KAAM7B,EACN4C,SAAUoC,EAAQpC,UAAY,4BAGhC3C,EAAgBoF,IAAIP,EAAQK,GAC5BG,EAAyBH,EAC3B,CAMA,MAAMG,EAA2BH,IAC/B,MAAQC,QAASzC,EAAIC,SAAEA,GAAauC,EAGhBxC,EAAK8B,iBAAiB,qBAC9BP,QAAQqB,IAClBA,EAAMrH,iBAAiB,QAASiC,GAC3BoF,EAAMhF,OAAyB,OAAhBgF,EAAMhF,QACxBgF,EAAMhF,MAAQ,SAKlB,MAAMU,EAAW,CACfY,KAAM7B,EACN4C,SAAUA,EACVa,MAAOd,GAITA,EAAKzE,iBAAiB,SAAUmE,EAAiBpB,KAM7CuE,EAAsB,KAC1B,MAAMvE,EAAW,CACfY,KAAM7B,EACN4C,SAAU,qBAGNa,EAxFY,CAAAxC,IAClB,MAAMwC,EAAQxF,SAAS2F,cAAc,OAGrC,OAFAH,EAAMI,UAAY,cAAc5C,EAASY,OACzC4B,EAAMQ,UApCC,y+BAqCAR,GAoFOgC,CAAYxE,GAC1BA,EAASwC,MAAQA,EAGJA,EAAMpF,cAAc,iBAC5BH,iBAAiB,SAAUmE,EAAiBpB,IAG9BwC,EAAMpF,cAAc,qBAC5BH,iBAAiB,QAASiC,GAGrClC,SAASS,KAAKsF,YAAYP,GAGRA,EAAMpF,cAAc,qBAC5BH,iBAAiB,QAASkC,IAClCA,EAAEkC,iBACFqC,EAAUlB,KAIZ3E,OAAOZ,iBAAiB,QAASkC,IAC3BA,EAAEE,SAAWmD,GACfkB,EAAUlB,KAKQxF,SAASwG,iBAC7B,kDAEYP,QAAQwB,IACpBA,EAAQxH,iBAAiB,QAASkC,IAChCA,EAAEkC,iBA/GU,CAAAmB,IAChBA,EAAMmB,UAAUe,IAAI,SA+GhBC,CAAUnC,QAwChBxF,SAASC,iBAAiB,mBAhCnB,WAGLwB,QAAQC,IAAI,mCACZD,QAAQC,IACN,sCAMF6F,IAGAX,EAAa,cAAe,CAAC,OAAQ,OAAQ,CAC3CjC,SAAU,sBAGZiC,EAAa,WAAY,CAAC,OAAQ,CAChCjC,SAAU,uBAGZiC,EAAa,iBAAkB,CAAC,OAAQ,OAAQ,CAC9CjC,SAAU,kBAGZlD,QAAQC,IAAI,4CACZD,QAAQC,IAAI,8DACZD,QAAQC,IAAI,oDACd,GChiBA1B,SAASC,iBAAiB,mBAAoB,WAC5CwB,QAAQC,IAAI,yBAA0B,IAGtC,MAAMkG,EACI,IADJA,EAEI,IAFJA,EAGK,IAILC,EAAO7H,SAASwG,iBAAiB,sBACjCsB,EAAe9H,SAASgH,eAAe,gBAGvCe,EAAU/H,SAASgH,eAAe,WAClCgB,EAAUhI,SAASgH,eAAe,WACxC,IAAIiB,EAAe,EACfC,EAAe,EACnB,MAAMC,EAAcnI,SAASwG,iBAAiB,iBAAiBhC,OAC/D,IAAI4D,EAAW9H,KAAK+H,IAAI,EAAGF,EAAcD,GAoBzC,SAASI,IAEP,MAAMC,EAAYT,EAAa1H,cAAc,iBAC7C,IAAKmI,EAAW,OAEhB,MAAMC,EAAaC,iBAAiBF,GAC9BG,EAAYH,EAAUI,YACtBC,EAAkBC,SAASL,EAAWM,cAAgB,EAGtDC,EAAad,GAAgBS,EAFvBE,GAGZd,EAAapH,MAAMsI,UAAY,eAAeD,OAG9ChB,EAAQkB,SAA4B,IAAjBhB,EACnBD,EAAQiB,SAAWhB,GAAgBG,CACrC,CAGA,SAASc,EAAiBC,GACxB,MAAMC,EAAWnB,EAAekB,EAC5BC,GAAY,GAAKA,GAAYhB,IAC/BH,EAAemB,EACfd,IAEJ,CA1CAT,EAAK5B,QAAQoD,IACXA,EAAIpJ,iBAAiB,QAAS,WAE5B4H,EAAK5B,QAAQqD,GAAKA,EAAE3C,UAAU9B,OAAO,WAGrCvD,KAAKqF,UAAUe,IAAI,UAMnB6B,EAHgBjI,KAAKkI,aAAa,YAIpC,KA+BFzB,EAAQ9H,iBAAiB,QAAS,IAAMiJ,GAAiB,IACzDlB,EAAQ/H,iBAAiB,QAAS,IAAMiJ,EAAiB,IAGzD,MAAMO,EAAc,CAClBC,IAAK,CACHC,MAAO,MACPC,SAAU,CACR,CACEC,MAAO,sBACPC,MAAO,aACPC,QAAS,iBACTC,SAAU,kBACVC,KAAM,0BACNC,SAAU,CACR,6BACA,oCACA,6BAGJ,CACEL,MAAO,sBACPC,MAAO,aACPC,QAAS,iBACTC,SAAU,kBACVC,KAAM,2BACNC,SAAU,CACR,+CACA,oCACA,6BAGJ,CACEL,MAAO,sBACPC,MAAO,cACPC,QAAS,iBACTC,SAAU,kBACVC,KAAM,2BACNC,SAAU,CACR,8CACA,oCACA,6BAGJ,CACEL,MAAO,iBACPC,MAAO,cACPC,QAAS,iBACTC,SAAU,kBACVC,KAAM,2BACNC,SAAU,CACR,yBACA,oCACA,6BAGJ,CACEL,MAAO,SACPC,MAAO,cACPC,QAAS,iBACTC,SAAU,kBACVC,KAAM,0BACNC,SAAU,CACR,+BACA,oCACA,+BAKRC,MAAO,CACLR,MAAO,QACPC,SAAU,CACR,CACEC,MAAO,sBACPC,MAAO,aACPC,QAAS,cACTC,SAAU,kBACVC,KAAM,0BACNC,SAAU,CACR,6BACA,oCACA,+BAGJ,CACEL,MAAO,sBACPC,MAAO,cACPC,QAAS,cACTC,SAAU,kBACVC,KAAM,2BACNC,SAAU,CACR,+CACA,oCACA,+BAGJ,CACEL,MAAO,sBACPC,MAAO,cACPC,QAAS,cACTC,SAAU,kBACVC,KAAM,2BACNC,SAAU,CACR,8CACA,oCACA,+BAGJ,CACEL,MAAO,iBACPC,MAAO,cACPC,QAAS,cACTC,SAAU,kBACVC,KAAM,2BACNC,SAAU,CACR,yBACA,oCACA,+BAGJ,CACEL,MAAO,SACPC,MAAO,cACPC,QAAS,cACTC,SAAU,kBACVC,KAAM,0BACNC,SAAU,CACR,+BACA,oCACA,iCAKRE,KAAM,CACJT,MAAO,OACPC,SAAU,CACR,CACEC,MAAO,sBACPC,MAAO,aACPC,QAAS,mBACTC,SAAU,kBACVC,KAAM,0BACNC,SAAU,CACR,6BACA,oCACA,6BAGJ,CACEL,MAAO,sBACPC,MAAO,aACPC,QAAS,mBACTC,SAAU,kBACVC,KAAM,2BACNC,SAAU,CACR,+CACA,oCACA,6BAGJ,CACEL,MAAO,sBACPC,MAAO,cACPC,QAAS,mBACTC,SAAU,kBACVC,KAAM,2BACNC,SAAU,CACR,8CACA,oCACA,6BAGJ,CACEL,MAAO,iBACPC,MAAO,cACPC,QAAS,mBACTC,SAAU,kBACVC,KAAM,2BACNC,SAAU,CACR,yBACA,oCACA,6BAGJ,CACEL,MAAO,SACPC,MAAO,cACPC,QAAS,mBACTC,SAAU,kBACVC,KAAM,0BACNC,SAAU,CACR,+BACA,oCACA,gCAQV,SAASX,EAAkBc,GACzB,MAAMC,EAAQtK,SAASwG,iBAAiB,iBAClC+D,EAAOd,EAAYY,GAEzBC,EAAMrE,QAAQ,CAACuE,EAAMC,KACnB,GAAIF,EAAKX,SAASa,GAAQ,CACxB,MAAMV,EAAUQ,EAAKX,SAASa,GAGxBC,EAAeF,EAAKpK,cAAc,eACpCsK,IACFA,EAAavE,YAAc4D,EAAQF,OAIrC,MAAMc,EAAcH,EAAKpK,cAAc,eACnCuK,IACFA,EAAYxE,YAAc4D,EAAQE,MAIpC,MAAMW,EAAeJ,EAAKpK,cAAc,eACpCwK,IACFA,EAAazE,YAAc4D,EAAQD,OAIrC,MAAMe,EAAeL,EAAKpK,cAAc,kBACxC,GAAIyK,EAAc,CAChBA,EAAa7E,UAAY,GAGL,CAClB+D,EAAQG,SAAS,GACjB,2BAA2BH,EAAQA,mBAAmBA,EAAQC,cAC3DD,EAAQG,SAASY,MAAM,IAIhB7E,QAAQ8E,IAClB,GAAIA,EAAa,CAEf,MAAMC,EAAchL,SAAS2F,cAAc,OAC3CqF,EAAYpF,UAAY,eACxBoF,EAAYhF,UAAY,+BACV,uGACc+E,wBAE5BF,EAAa9E,YAAYiF,EAC3B,GAEJ,CACF,GAEJ,CAGA,IAAIC,EAAS,EACTC,EAAS,EACTC,GAAa,EAyDjB,SAASC,IACP,MAAMC,EAAQxK,OAAOyK,WAUfC,EAPe,CACnB,CAAEC,SAAU5D,EAAoB6D,OAAQ,GACxC,CAAED,SAAU5D,EAAoB6D,OAAQ,GACxC,CAAED,SAAU5D,EAAqB6D,OAAQ,GACzC,CAAED,SAAUE,IAAUD,OAAQ,IAGKE,KACnCzE,GAAUmE,EAAQnE,EAAOsE,UACzBC,OAEEF,IAAoBrD,IAEtBA,EAAeqD,EACfnD,EAAW9H,KAAK+H,IAAI,EAAGF,EAAcD,GAGjCD,EAAeG,IACjBH,EAAeG,GAGjBE,IAEJ,CAlFAR,EAAa7H,iBAAiB,aAAc,SAAUkC,GACpD8I,EAAS9I,EAAEyJ,QAAQ,GAAGC,QACtBX,EAAS/I,EAAEyJ,QAAQ,GAAGE,QACtBX,GAAa,CACf,GAEArD,EAAa7H,iBAAiB,YAAa,SAAUkC,GACnD,IAAKgJ,EAAY,OAEjB,MAAMY,EAAW5J,EAAEyJ,QAAQ,GAAGC,QACxBG,EAAW7J,EAAEyJ,QAAQ,GAAGE,QACxBG,EAAQ3L,KAAK4L,IAAIH,EAAWd,GAK9BgB,EAJU3L,KAAK4L,IAAIF,EAAWd,IAIbe,EAAQ,IAC3B9J,EAAEkC,gBAEN,GAEAyD,EAAa7H,iBAAiB,WAAY,SAAUkC,GAClD,IAAKgJ,EAAY,OAEjB,MAAMgB,EAAOhK,EAAEiK,eAAe,GAAGP,QAC3BQ,EAAOpB,EAASkB,EAElB7L,KAAK4L,IAAIG,GAAQ,KAEfA,EAAO,GAAKpE,EAAeG,GAE7BH,IACAK,KACS+D,EAAO,GAAKpE,EAAe,IAEpCA,IACAK,MAIJ6C,GAAa,CACf,GAGAnL,SAASC,iBAAiB,UAAW,SAAUkC,GAC/B,cAAVA,EAAEU,KAAuBoF,EAAe,GAC1CA,IACAK,KACmB,eAAVnG,EAAEU,KAAwBoF,EAAeG,IAClDH,IACAK,IAEJ,GAgCAzH,OAAOZ,iBAAiB,SAAUmL,GAGlCA,IAGA9C,IAGAiB,EAAkB,MACpB,GCzXAvJ,SAASC,iBAAiB,mBAjC1B,WACEwB,QAAQC,IAAI,mCAGZ,MAAM4K,EAAWC,YAAYC,MAC7B/K,QAAQC,IAAI,0BAA0B4K,EAASG,QAAQ,QAavDzM,SAASwG,iBAAiB,gBAAgBP,QAAQyG,IAChDA,EAAOzM,iBAAiB,QAAS,SAAUkC,GACzCA,EAAEkC,iBACF,MAAMhC,EAASrC,SAASI,cAAckB,KAAKkI,aAAa,SACpDnH,GACFA,EAAOsK,eAAe,CACpBC,SAAU,SACVC,MAAO,SAGb,IAhBJ,GA2BAhM,OAAOZ,iBAAiB,QAAS,SAAU6M,GACzCrL,QAAQqC,MAAM,oBAAqBgJ,EAAMhJ,MAI3C,GAEAjD,OAAOZ,iBAAiB,qBAAsB,SAAU6M,GACtDrL,QAAQqC,MAAM,+BAAgCgJ,EAAMC,OACtD,GA2BAlM,OAAOmM,QAAU,CACfC,QAAS,QACTC,aAAa,EACbC,QAAS,CAAC,SAAU,QAAS","sources":["src/js/header.js","src/js/forms.js","src/js/pricing.js","src/js/main.js"],"sourcesContent":["// ==========================================================================\r\n// Header Height Compensation\r\n// ==========================================================================\r\n\r\n/**\r\n * Компенсирует высоту фиксированного хедера\r\n * Добавляет padding-top к body равный высоте .header\r\n */\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  function updateBodyPadding() {\r\n    const header = document.querySelector('.header');\r\n    if (header) {\r\n      const headerHeight = Math.round(header.offsetHeight);\r\n      if (headerHeight > 0) {\r\n        document.body.style.paddingTop = headerHeight + 'px';\r\n      }\r\n    }\r\n  }\r\n\r\n  // Применяем при загрузке\r\n  updateBodyPadding();\r\n\r\n  // Debounce для resize\r\n  let resizeTimeout;\r\n  window.addEventListener('resize', function () {\r\n    clearTimeout(resizeTimeout);\r\n    resizeTimeout = setTimeout(updateBodyPadding, 100);\r\n  });\r\n\r\n  // Обработка изменения ориентации\r\n  window.addEventListener('orientationchange', function () {\r\n    setTimeout(updateBodyPadding, 200);\r\n  });\r\n});\r\n","// ==========================================================================\r\n// Forms Management System - Main File\r\n// ==========================================================================\r\n\r\n// ==========================================================================\r\n// Configuration\r\n// ==========================================================================\r\n\r\n// Telegram Bot Configuration\r\nconst TELEGRAM_CONFIG = {\r\n  token1: '', // тг бот токен ч1\r\n  token2: '', // тг бот токен ч2\r\n  chatId: '', // тг чат id\r\n  mode: 'html',\r\n  get token() {\r\n    return `${this.token1}:${this.token2}`;\r\n  },\r\n};\r\n\r\n// Yandex Metrika integration\r\nconst ym = window.ym;\r\nif (!ym) {\r\n  console.log('Yandex Metrika не найдена');\r\n}\r\n\r\n// Form field configurations\r\nconst FIELD_CONFIG = {\r\n  tel: 'Контактный телефон',\r\n  name: 'Имя',\r\n  email: 'Email (Необязательно)',\r\n};\r\n\r\n// Form types configuration\r\nconst FORM_TYPES = {\r\n  modal: 'modalForm',\r\n  registered: 'registeredForm',\r\n  callback: 'callbackForm',\r\n  mainBlue: 'mainBlueForm',\r\n};\r\n\r\n// Registered forms storage\r\nconst registeredForms = new Map();\r\n\r\n// ==========================================================================\r\n// Utilities (integrated from utils.js)\r\n// ==========================================================================\r\n\r\n/**\r\n * Phone number formatting with live input mask\r\n * @param {Event} e - Input event\r\n */\r\nconst formatPhoneInput = e => {\r\n  const val = e.target.value;\r\n  const digits = val.replace(/\\D/g, '');\r\n  const match = digits.match(/(7|8)?(\\d{0,3})(\\d{0,3})(\\d{0,2})(\\d{0,2})/);\r\n\r\n  let result = '+7 ';\r\n\r\n  if (match[2]) {\r\n    result += '(' + match[2];\r\n    if (match[2] && match[3]) {\r\n      result += ')';\r\n    }\r\n  }\r\n\r\n  if (match[3]) {\r\n    result += ' ' + match[3];\r\n  }\r\n\r\n  if (match[4]) {\r\n    result += ' ' + match[4];\r\n  }\r\n\r\n  if (match[5]) {\r\n    result += '-' + match[5];\r\n  }\r\n\r\n  e.target.value = result;\r\n};\r\n\r\n/**\r\n * Validate Russian phone number\r\n * @param {string} phone - Phone number string\r\n * @returns {boolean} - Is valid\r\n */\r\nconst validatePhone = phone => {\r\n  const regex =\r\n    /^(\\+7|7|8)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/;\r\n  return regex.test(phone);\r\n};\r\n\r\n/**\r\n * Get field display name\r\n * @param {string} key - Field key\r\n * @returns {string} - Display name\r\n */\r\nconst getFieldName = key => {\r\n  return FIELD_CONFIG[key] || key;\r\n};\r\n\r\n// ==========================================================================\r\n// Telegram Bot Integration\r\n// ==========================================================================\r\n\r\n/**\r\n * Send message to Telegram bot\r\n * @param {Object} params - Message parameters\r\n */\r\nconst sendToTelegram = ({ message, formType }) => {\r\n  const { token, chatId, mode } = TELEGRAM_CONFIG;\r\n  const encodedMessage = encodeURI(message);\r\n  const url = `https://api.telegram.org/bot${token}/sendMessage?chat_id=${chatId}&parse_mode=${mode}&text=${encodedMessage}`;\r\n\r\n  fetch(url)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log('Telegram API response:', res);\r\n\r\n      if (res.ok) {\r\n        handleSubmissionSuccess(formType);\r\n        localStorage.setItem('formSended', true);\r\n\r\n        // Yandex Metrika goals\r\n        triggerMetrikaGoal(formType.type);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Telegram sending error:', error);\r\n      // Fallback to success for better UX\r\n      handleSubmissionSuccess(formType);\r\n    });\r\n};\r\n\r\n/**\r\n * Fallback for development/testing\r\n * @param {Object} params - Message parameters\r\n */\r\nconst sendToTelegramFake = ({ message, formType }) => {\r\n  localStorage.setItem('formSended', true);\r\n\r\n  console.group(`📋 ФОРМА ОТПРАВЛЕНА (DEV MODE)`);\r\n  console.log(`📝 Тип формы: ${formType.textName}`);\r\n  console.log(`🏷️ Form Type: ${formType.type}`);\r\n  console.log(`📄 Сообщение для отправки:`);\r\n  console.log(decodeURI(message));\r\n  console.log(`📊 Время: ${new Date().toLocaleString()}`);\r\n  console.log(`💾 localStorage.formSended = true`);\r\n  console.groupEnd();\r\n\r\n  // Simulate network delay for realistic testing\r\n  setTimeout(() => {\r\n    console.log(`✅ Форма успешно \"отправлена\" (имитация)`);\r\n    handleSubmissionSuccess(formType);\r\n    // Trigger Metrika in dev mode too for testing\r\n    triggerMetrikaGoal(formType.type);\r\n  }, 800);\r\n};\r\n\r\n/**\r\n * Smart form sender - automatically chooses real or fake based on environment\r\n * @param {Object} params - Message parameters\r\n */\r\nconst sendForm = ({ message, formType }) => {\r\n  const isDevelopment = process.env.NODE_ENV !== 'production';\r\n\r\n  if (isDevelopment) {\r\n    console.log('🚀 Development mode - using fake form sending');\r\n    sendToTelegramFake({ message, formType });\r\n  } else {\r\n    console.log('📤 Production mode - sending to Telegram bot');\r\n    sendToTelegram({ message, formType });\r\n  }\r\n};\r\n\r\n/**\r\n * Trigger Yandex Metrika goals\r\n * @param {string} formType - Form type\r\n */\r\nconst triggerMetrikaGoal = formType => {\r\n  if (!ym) return;\r\n\r\n  const goalMap = {\r\n    [FORM_TYPES.modal]: 'new_lid',\r\n    [FORM_TYPES.callback]: 'new_lid',\r\n    [FORM_TYPES.mainBlue]: 'new_lid',\r\n  };\r\n\r\n  const goal = goalMap[formType];\r\n  if (goal) {\r\n    ym(75394450, 'reachGoal', goal);\r\n  }\r\n};\r\n\r\n// ==========================================================================\r\n// Form Processing\r\n// ==========================================================================\r\n\r\n/**\r\n * Handle form submission\r\n * @param {Object} formType - Form type configuration\r\n * @returns {Function} - Event handler\r\n */\r\nconst handleFormSubmit = formType => e => {\r\n  e.preventDefault();\r\n\r\n  // reCAPTCHA check for modal forms\r\n  if (formType.type === FORM_TYPES.modal && typeof grecaptcha !== 'undefined') {\r\n    const response = grecaptcha.getResponse();\r\n    if (response.length === 0) {\r\n      alert('Пожалуйста, подтвердите, что вы не робот!');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const form = e.target;\r\n  const { textName } = formType;\r\n\r\n  // Clear previous errors\r\n  const errorsContainer = form.querySelector('.errorsContainer');\r\n  if (errorsContainer) {\r\n    errorsContainer.remove();\r\n  }\r\n\r\n  // Build message\r\n  let message = `<b>Новая заявка с сайта oknanaveka40.ru</b>\\n––––\\n\\n`;\r\n\r\n  const formData = new FormData(form);\r\n  const validation = { isValid: true, errors: [] };\r\n\r\n  // Process and validate form data\r\n  for (let [key, value] of formData.entries()) {\r\n    if (key === 'g-recaptcha-response') continue;\r\n\r\n    const trimmedValue = value.trim();\r\n    if (!trimmedValue) continue;\r\n\r\n    // Validation\r\n    if (key === 'tel') {\r\n      if (!validatePhone(trimmedValue)) {\r\n        validation.isValid = false;\r\n        validation.errors.push('Введите корректный телефон');\r\n      }\r\n    }\r\n\r\n    if (key === 'name') {\r\n      if (trimmedValue.length < 2) {\r\n        validation.isValid = false;\r\n        validation.errors.push('Имя не может быть пустым');\r\n      }\r\n    }\r\n\r\n    // Add to message\r\n    message += `<i>${getFieldName(key)}</i>: <b>${trimmedValue}</b>\\n`;\r\n  }\r\n\r\n  message += `\\n\\n<i>${textName ? `(${textName})` : ''}</i>`;\r\n\r\n  // Handle validation errors\r\n  if (!validation.isValid) {\r\n    showFormErrors(validation, formType);\r\n    return;\r\n  }\r\n\r\n  // Send form using smart sender (auto-detects dev/prod mode)\r\n  sendForm({ message, formType });\r\n};\r\n\r\n/**\r\n * Show form validation errors\r\n * @param {Object} validation - Validation result\r\n * @param {Object} formType - Form type\r\n */\r\nconst showFormErrors = (validation, formType) => {\r\n  const { modal } = formType;\r\n  const mainForm =\r\n    modal.nodeName === 'FORM' ? modal : modal.querySelector('.contact-form');\r\n\r\n  let errorsContainer = mainForm.querySelector('.errorsContainer');\r\n\r\n  if (!errorsContainer) {\r\n    errorsContainer = document.createElement('div');\r\n    errorsContainer.className = 'errorsContainer';\r\n\r\n    // Insert before form fields\r\n    const formFields = mainForm.querySelector('.form-fields');\r\n    if (formFields) {\r\n      mainForm.insertBefore(errorsContainer, formFields);\r\n    } else {\r\n      mainForm.appendChild(errorsContainer);\r\n    }\r\n  }\r\n\r\n  errorsContainer.innerHTML = '';\r\n  validation.errors.forEach(error => {\r\n    const errorEl = document.createElement('div');\r\n    errorEl.className = 'errorItem';\r\n    errorEl.textContent = error;\r\n    errorsContainer.appendChild(errorEl);\r\n  });\r\n};\r\n\r\n/**\r\n * Handle successful form submission\r\n * @param {Object} formType - Form type\r\n */\r\nconst handleSubmissionSuccess = formType => {\r\n  const { type, modal } = formType;\r\n\r\n  const successTemplates = {\r\n    [FORM_TYPES.modal]: `\r\n      <div class='form-header'>\r\n        <h3>Заявка успешно отправлена</h3>\r\n        <p>Благодарим вас за успешную отправку заявки! Мы свяжемся с вами в самое ближайшее время.</p>\r\n      </div>\r\n      <button class='btn btn-blue modal-close-button'>Закрыть</button>\r\n    `,\r\n    [FORM_TYPES.registered]: `\r\n      <div class='form-header'>\r\n        <h3>Заявка успешно отправлена</h3>\r\n        <p>Мы свяжемся с вами в самое ближайшее время.</p>\r\n      </div>\r\n    `,\r\n    default: `\r\n      <div class='form-header'>\r\n        <h3>Заявка успешно отправлена</h3>\r\n        <p>Мы свяжемся с вами в самое ближайшее время.</p>\r\n      </div>\r\n    `,\r\n  };\r\n\r\n  const template = successTemplates[type] || successTemplates.default;\r\n  const mainForm =\r\n    modal.nodeName === 'FORM' ? modal : modal.querySelector('.contact-form');\r\n\r\n  mainForm.innerHTML = template;\r\n\r\n  // Add close handlers for modal\r\n  if (type === FORM_TYPES.modal) {\r\n    const closeButtons = modal.querySelectorAll('.modal-close-button');\r\n    closeButtons.forEach(button => {\r\n      button.addEventListener('click', e => {\r\n        e.preventDefault();\r\n        hideModal(modal);\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// ==========================================================================\r\n// Modal System\r\n// ==========================================================================\r\n\r\n/**\r\n * Create modal HTML\r\n * @param {Object} config - Modal configuration\r\n * @returns {string} - Modal HTML\r\n */\r\nconst createModalHTML = config => {\r\n  return `\r\n    <div class='modal-container'>\r\n      <div class='modal-close modal-close-icon'></div>\r\n      <div class='form-content'>\r\n        <form class='contact-form'>  \r\n          <div class='form-header'>\r\n            <h3>Оставьте заявку</h3>\r\n            <p>Мы свяжемся с вами как можно раньше</p>\r\n          </div>\r\n          <div class='form-fields'>\r\n            <div class='form-field'>\r\n              <input type='text' name='name' placeholder='Ваше имя' class='input' required />\r\n            </div>\r\n            <div class='form-field'>\r\n              <input type='tel' name='tel' placeholder='+7' class='input' minlength=\"10\" value='+7 ' required />\r\n            </div>\r\n          </div>\r\n          <button type='submit' class='btn btn-orange'>Отправить</button>\r\n          <p class='form-disclaimer'>\r\n            Отправляя данные через форму вы даете согласие на обработку своих \r\n            <span>персональных данных</span>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  `;\r\n};\r\n\r\n/**\r\n * Create modal element\r\n * @param {Object} formType - Form type configuration\r\n * @returns {HTMLElement} - Modal element\r\n */\r\nconst createModal = formType => {\r\n  const modal = document.createElement('div');\r\n  modal.className = `modal-form ${formType.type}`;\r\n  modal.innerHTML = createModalHTML(formType);\r\n  return modal;\r\n};\r\n\r\n/**\r\n * Show modal\r\n * @param {HTMLElement} modal - Modal element\r\n */\r\nconst showModal = modal => {\r\n  modal.classList.add('show');\r\n};\r\n\r\n/**\r\n * Hide modal\r\n * @param {HTMLElement} modal - Modal element\r\n */\r\nconst hideModal = modal => {\r\n  modal.classList.remove('show');\r\n};\r\n\r\n// ==========================================================================\r\n// Form Registration & Initialization\r\n// ==========================================================================\r\n\r\n/**\r\n * Register a form for processing\r\n * @param {string} formId - Form ID\r\n * @param {Array} fields - Expected fields\r\n * @param {Object} options - Additional options\r\n */\r\nexport function registerForm(formId, fields, options = {}) {\r\n  const form = document.getElementById(formId);\r\n  if (!form) {\r\n    console.warn(`Form with ID \"${formId}\" not found`);\r\n    return;\r\n  }\r\n\r\n  const config = {\r\n    fields,\r\n    options,\r\n    element: form,\r\n    type: FORM_TYPES.registered,\r\n    textName: options.textName || 'Зарегистрированная форма',\r\n  };\r\n\r\n  registeredForms.set(formId, config);\r\n  initializeRegisteredForm(config);\r\n}\r\n\r\n/**\r\n * Initialize registered form\r\n * @param {Object} config - Form configuration\r\n */\r\nconst initializeRegisteredForm = config => {\r\n  const { element: form, textName } = config;\r\n\r\n  // Initialize phone inputs\r\n  const phoneInputs = form.querySelectorAll('input[type=\"tel\"]');\r\n  phoneInputs.forEach(input => {\r\n    input.addEventListener('input', formatPhoneInput);\r\n    if (!input.value || input.value === '+7') {\r\n      input.value = '+7 ';\r\n    }\r\n  });\r\n\r\n  // Create form type for submission\r\n  const formType = {\r\n    type: FORM_TYPES.registered,\r\n    textName: textName,\r\n    modal: form,\r\n  };\r\n\r\n  // Handle form submission\r\n  form.addEventListener('submit', handleFormSubmit(formType));\r\n};\r\n\r\n/**\r\n * Initialize modal form system\r\n */\r\nconst initializeModalForm = () => {\r\n  const formType = {\r\n    type: FORM_TYPES.modal,\r\n    textName: 'Всплывающая форма',\r\n  };\r\n\r\n  const modal = createModal(formType);\r\n  formType.modal = modal;\r\n\r\n  // Setup form submission\r\n  const form = modal.querySelector('.contact-form');\r\n  form.addEventListener('submit', handleFormSubmit(formType));\r\n\r\n  // Setup phone input\r\n  const phoneInput = modal.querySelector('input[type=\"tel\"]');\r\n  phoneInput.addEventListener('input', formatPhoneInput);\r\n\r\n  // Add to DOM\r\n  document.body.appendChild(modal);\r\n\r\n  // Setup close handlers\r\n  const closeIcon = modal.querySelector('.modal-close-icon');\r\n  closeIcon.addEventListener('click', e => {\r\n    e.preventDefault();\r\n    hideModal(modal);\r\n  });\r\n\r\n  // Close on backdrop click\r\n  window.addEventListener('click', e => {\r\n    if (e.target === modal) {\r\n      hideModal(modal);\r\n    }\r\n  });\r\n\r\n  // Setup modal triggers\r\n  const modalTriggers = document.querySelectorAll(\r\n    '[href=\"/forma-obratnoj-svyaz\"], .modal-trigger'\r\n  );\r\n  modalTriggers.forEach(trigger => {\r\n    trigger.addEventListener('click', e => {\r\n      e.preventDefault();\r\n      showModal(modal);\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Initialize all form systems\r\n */\r\nexport function initializeForms() {\r\n  const isDevelopment = process.env.NODE_ENV !== 'production';\r\n\r\n  console.log('🚀 Initializing Forms System...');\r\n  console.log(\r\n    `🔧 Mode: ${\r\n      isDevelopment ? 'Development (fake sending)' : 'Production (real sending)'\r\n    }`\r\n  );\r\n\r\n  // Initialize modal system\r\n  initializeModalForm();\r\n\r\n  // Auto-register common forms\r\n  registerForm('contactForm', ['name', 'tel'], {\r\n    textName: 'Форма Hero секции',\r\n  });\r\n\r\n  registerForm('leadForm', ['tel'], {\r\n    textName: 'Основная лид-форма',\r\n  });\r\n\r\n  registerForm('reviewLeadForm', ['name', 'tel'], {\r\n    textName: 'Форма отзывов',\r\n  });\r\n\r\n  console.log('✅ Forms system initialized successfully!');\r\n  console.log(`📊 Registered forms: contactForm, leadForm, reviewLeadForm`);\r\n  console.log(`🎯 Modal triggers: [href=\"/forma-obratnoj-svyaz\"]`);\r\n}\r\n\r\n// Auto-initialize when DOM is ready\r\ndocument.addEventListener('DOMContentLoaded', initializeForms);\r\n","// ==========================================================================\r\n// Pricing Section JavaScript\r\n// ==========================================================================\r\n\r\n// Import check icon with ?url to get URL string\r\nimport checkIconSrc from '../img/icon-check-white-blue-circle.svg?url';\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  console.log('checkIconSrc imported:', checkIconSrc);\r\n\r\n  // Responsive breakpoints for carousel\r\n  const BREAKPOINTS = {\r\n    MOBILE: 576,\r\n    TABLET: 768,\r\n    DESKTOP: 992,\r\n  };\r\n\r\n  // Tab functionality\r\n  const tabs = document.querySelectorAll('.pricing-tabs .tab');\r\n  const pricingCards = document.getElementById('pricingCards');\r\n\r\n  // Carousel functionality\r\n  const prevBtn = document.getElementById('prevBtn');\r\n  const nextBtn = document.getElementById('nextBtn');\r\n  let currentSlide = 0;\r\n  let slidesToShow = 4; // Number of cards visible at once (responsive)\r\n  const totalSlides = document.querySelectorAll('.pricing-card').length;\r\n  let maxSlide = Math.max(0, totalSlides - slidesToShow);\r\n\r\n  // Tab switching\r\n  tabs.forEach(tab => {\r\n    tab.addEventListener('click', function () {\r\n      // Remove active class from all tabs\r\n      tabs.forEach(t => t.classList.remove('active'));\r\n\r\n      // Add active class to clicked tab\r\n      this.classList.add('active');\r\n\r\n      // Get the tab type\r\n      const tabType = this.getAttribute('data-tab');\r\n\r\n      // Update card content based on tab\r\n      updateCardContent(tabType);\r\n    });\r\n  });\r\n\r\n  // Carousel navigation\r\n  function updateCarousel() {\r\n    // Get actual card dimensions from DOM to avoid hardcoding\r\n    const firstCard = pricingCards.querySelector('.pricing-card');\r\n    if (!firstCard) return;\r\n\r\n    const cardStyles = getComputedStyle(firstCard);\r\n    const cardWidth = firstCard.offsetWidth;\r\n    const cardMarginRight = parseInt(cardStyles.marginRight) || 0;\r\n    const gap = cardMarginRight;\r\n\r\n    const translateX = currentSlide * (cardWidth + gap);\r\n    pricingCards.style.transform = `translateX(-${translateX}px)`;\r\n\r\n    // Update button states\r\n    prevBtn.disabled = currentSlide === 0;\r\n    nextBtn.disabled = currentSlide >= maxSlide;\r\n  }\r\n\r\n  // Unified carousel navigation function\r\n  function navigateCarousel(direction) {\r\n    const newSlide = currentSlide + direction;\r\n    if (newSlide >= 0 && newSlide <= maxSlide) {\r\n      currentSlide = newSlide;\r\n      updateCarousel();\r\n    }\r\n  }\r\n\r\n  prevBtn.addEventListener('click', () => navigateCarousel(-1));\r\n  nextBtn.addEventListener('click', () => navigateCarousel(1));\r\n\r\n  // Pricing data for different profile types\r\n  const contentData = {\r\n    whs: {\r\n      brand: 'WHS',\r\n      profiles: [\r\n        {\r\n          title: 'Одностворчатое окно',\r\n          price: 'от 4 500 ₽',\r\n          profile: 'WHS Profile 60',\r\n          chambers: '3 камеры, 60 мм',\r\n          size: '600 × 1200 мм (0,72 м²)',\r\n          features: [\r\n            'Поворотно-откидная створка',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее стекло',\r\n          ],\r\n        },\r\n        {\r\n          title: 'Двухстворчатое окно',\r\n          price: 'от 7 200 ₽',\r\n          profile: 'WHS Profile 60',\r\n          chambers: '3 камеры, 60 мм',\r\n          size: '1300 × 1400 мм (1,82 м²)',\r\n          features: [\r\n            'Одна поворотно-откидная, одна глухая створка',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее стекло',\r\n          ],\r\n        },\r\n        {\r\n          title: 'Трехстворчатое окно',\r\n          price: 'от 10 800 ₽',\r\n          profile: 'WHS Profile 60',\r\n          chambers: '3 камеры, 60 мм',\r\n          size: '2100 × 1400 мм (2,94 м²)',\r\n          features: [\r\n            'Две поворотно-откидные, одна глухая створка',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее стекло',\r\n          ],\r\n        },\r\n        {\r\n          title: 'Балконный блок',\r\n          price: 'от 12 500 ₽',\r\n          profile: 'WHS Profile 60',\r\n          chambers: '3 камеры, 60 мм',\r\n          size: '2100 × 2100 мм (4,41 м²)',\r\n          features: [\r\n            'Окно + балконная дверь',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее стекло',\r\n          ],\r\n        },\r\n        {\r\n          title: 'Лоджия',\r\n          price: 'от 12 500 ₽',\r\n          profile: 'WHS Profile 60',\r\n          chambers: '3 камеры, 60 мм',\r\n          size: '3000 × 1400 мм (4,2 м²)',\r\n          features: [\r\n            'Панорамное остекление лоджии',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее стекло',\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    rehau: {\r\n      brand: 'REHAU',\r\n      profiles: [\r\n        {\r\n          title: 'Одностворчатое окно',\r\n          price: 'от 8 000 ₽',\r\n          profile: 'REHAU Blitz',\r\n          chambers: '3 камеры, 60 мм',\r\n          size: '600 × 1200 мм (0,72 м²)',\r\n          features: [\r\n            'Поворотно-откидная створка',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее i-стекло',\r\n          ],\r\n        },\r\n        {\r\n          title: 'Двухстворчатое окно',\r\n          price: 'от 12 700 ₽',\r\n          profile: 'REHAU Blitz',\r\n          chambers: '3 камеры, 60 мм',\r\n          size: '1300 × 1400 мм (1,82 м²)',\r\n          features: [\r\n            'Одна поворотно-откидная, одна глухая створка',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее i-стекло',\r\n          ],\r\n        },\r\n        {\r\n          title: 'Трехстворчатое окно',\r\n          price: 'от 18 800 ₽',\r\n          profile: 'REHAU Blitz',\r\n          chambers: '3 камеры, 60 мм',\r\n          size: '2100 × 1400 мм (2,94 м²)',\r\n          features: [\r\n            'Две поворотно-откидные, одна глухая створка',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее i-стекло',\r\n          ],\r\n        },\r\n        {\r\n          title: 'Балконный блок',\r\n          price: 'от 20 700 ₽',\r\n          profile: 'REHAU Blitz',\r\n          chambers: '3 камеры, 60 мм',\r\n          size: '2100 × 2100 мм (4,41 м²)',\r\n          features: [\r\n            'Окно + балконная дверь',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее i-стекло',\r\n          ],\r\n        },\r\n        {\r\n          title: 'Лоджия',\r\n          price: 'от 20 700 ₽',\r\n          profile: 'REHAU Blitz',\r\n          chambers: '3 камеры, 60 мм',\r\n          size: '3000 × 1400 мм (4,2 м²)',\r\n          features: [\r\n            'Панорамное остекление лоджии',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее i-стекло',\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    veka: {\r\n      brand: 'VEKA',\r\n      profiles: [\r\n        {\r\n          title: 'Одностворчатое окно',\r\n          price: 'от 6 000 ₽',\r\n          profile: 'VEKA Evroline 58',\r\n          chambers: '3 камеры, 58 мм',\r\n          size: '600 × 1200 мм (0,72 м²)',\r\n          features: [\r\n            'Поворотно-откидная створка',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее стекло',\r\n          ],\r\n        },\r\n        {\r\n          title: 'Двухстворчатое окно',\r\n          price: 'от 9 700 ₽',\r\n          profile: 'VEKA Evroline 58',\r\n          chambers: '3 камеры, 58 мм',\r\n          size: '1300 × 1400 мм (1,82 м²)',\r\n          features: [\r\n            'Одна поворотно-откидная, одна глухая створка',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее стекло',\r\n          ],\r\n        },\r\n        {\r\n          title: 'Трехстворчатое окно',\r\n          price: 'от 13 800 ₽',\r\n          profile: 'VEKA Evroline 58',\r\n          chambers: '3 камеры, 58 мм',\r\n          size: '2100 × 1400 мм (2,94 м²)',\r\n          features: [\r\n            'Две поворотно-откидные, одна глухая створка',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее стекло',\r\n          ],\r\n        },\r\n        {\r\n          title: 'Балконный блок',\r\n          price: 'от 15 700 ₽',\r\n          profile: 'VEKA Evroline 58',\r\n          chambers: '3 камеры, 58 мм',\r\n          size: '2100 × 2100 мм (4,41 м²)',\r\n          features: [\r\n            'Окно + балконная дверь',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее стекло',\r\n          ],\r\n        },\r\n        {\r\n          title: 'Лоджия',\r\n          price: 'от 15 700 ₽',\r\n          profile: 'VEKA Evroline 58',\r\n          chambers: '3 камеры, 58 мм',\r\n          size: '3000 × 1400 мм (4,2 м²)',\r\n          features: [\r\n            'Панорамное остекление лоджии',\r\n            'Двухкамерный стеклопакет 24/32 мм',\r\n            'Энергосберегающее стекло',\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  // Update card content based on selected tab\r\n  function updateCardContent(tabType) {\r\n    const cards = document.querySelectorAll('.pricing-card');\r\n    const data = contentData[tabType];\r\n\r\n    cards.forEach((card, index) => {\r\n      if (data.profiles[index]) {\r\n        const profile = data.profiles[index];\r\n\r\n        // Update card title\r\n        const titleElement = card.querySelector('.card-title');\r\n        if (titleElement) {\r\n          titleElement.textContent = profile.title;\r\n        }\r\n\r\n        // Update window size\r\n        const sizeElement = card.querySelector('.size-value');\r\n        if (sizeElement) {\r\n          sizeElement.textContent = profile.size;\r\n        }\r\n\r\n        // Update price\r\n        const priceElement = card.querySelector('.card-price');\r\n        if (priceElement) {\r\n          priceElement.textContent = profile.price;\r\n        }\r\n\r\n        // Update all features\r\n        const featuresList = card.querySelector('.features-list');\r\n        if (featuresList) {\r\n          featuresList.innerHTML = '';\r\n\r\n          // Prepare complete features array with profile info\r\n          const allFeatures = [\r\n            profile.features[0], // First feature (створки)\r\n            `<span class=\"highlight\">${profile.profile}:</span> ${profile.chambers}`, // Profile info\r\n            ...profile.features.slice(1), // Remaining features\r\n          ];\r\n\r\n          // Generate feature items dynamically\r\n          allFeatures.forEach(featureText => {\r\n            if (featureText) {\r\n              // Only add if feature exists\r\n              const featureItem = document.createElement('div');\r\n              featureItem.className = 'feature-item';\r\n              featureItem.innerHTML = `\r\n                <img src=\"${checkIconSrc}\" alt=\"check\" class=\"check-icon\" width=\"24\" height=\"24\">\r\n                <p class=\"feature-text\">${featureText}</p>\r\n              `;\r\n              featuresList.appendChild(featureItem);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // Touch/swipe functionality for mobile\r\n  let startX = 0;\r\n  let startY = 0;\r\n  let isDragging = false;\r\n\r\n  pricingCards.addEventListener('touchstart', function (e) {\r\n    startX = e.touches[0].clientX;\r\n    startY = e.touches[0].clientY;\r\n    isDragging = true;\r\n  });\r\n\r\n  pricingCards.addEventListener('touchmove', function (e) {\r\n    if (!isDragging) return;\r\n\r\n    const currentX = e.touches[0].clientX;\r\n    const currentY = e.touches[0].clientY;\r\n    const diffX = Math.abs(currentX - startX);\r\n    const diffY = Math.abs(currentY - startY);\r\n\r\n    // Prevent default only if horizontal movement is greater than vertical\r\n    // This allows vertical scrolling while enabling horizontal swiping\r\n    if (diffX > diffY && diffX > 10) {\r\n      e.preventDefault();\r\n    }\r\n  });\r\n\r\n  pricingCards.addEventListener('touchend', function (e) {\r\n    if (!isDragging) return;\r\n\r\n    const endX = e.changedTouches[0].clientX;\r\n    const diff = startX - endX;\r\n\r\n    if (Math.abs(diff) > 50) {\r\n      // Minimum swipe distance\r\n      if (diff > 0 && currentSlide < maxSlide) {\r\n        // Swipe left - next slide\r\n        currentSlide++;\r\n        updateCarousel();\r\n      } else if (diff < 0 && currentSlide > 0) {\r\n        // Swipe right - previous slide\r\n        currentSlide--;\r\n        updateCarousel();\r\n      }\r\n    }\r\n\r\n    isDragging = false;\r\n  });\r\n\r\n  // Keyboard navigation\r\n  document.addEventListener('keydown', function (e) {\r\n    if (e.key === 'ArrowLeft' && currentSlide > 0) {\r\n      currentSlide--;\r\n      updateCarousel();\r\n    } else if (e.key === 'ArrowRight' && currentSlide < maxSlide) {\r\n      currentSlide++;\r\n      updateCarousel();\r\n    }\r\n  });\r\n\r\n  // Responsive handling\r\n  function handleResize() {\r\n    const width = window.innerWidth;\r\n\r\n    // Calculate slides to show based on screen width\r\n    const slidesConfig = [\r\n      { maxWidth: BREAKPOINTS.MOBILE, slides: 1 },\r\n      { maxWidth: BREAKPOINTS.TABLET, slides: 2 },\r\n      { maxWidth: BREAKPOINTS.DESKTOP, slides: 3 },\r\n      { maxWidth: Infinity, slides: 4 },\r\n    ];\r\n\r\n    const newSlidesToShow = slidesConfig.find(\r\n      config => width < config.maxWidth\r\n    ).slides;\r\n\r\n    if (newSlidesToShow !== slidesToShow) {\r\n      // Update slides to show and recalculate max slide\r\n      slidesToShow = newSlidesToShow;\r\n      maxSlide = Math.max(0, totalSlides - slidesToShow);\r\n\r\n      // Reset carousel position if it's now beyond the max\r\n      if (currentSlide > maxSlide) {\r\n        currentSlide = maxSlide;\r\n      }\r\n\r\n      updateCarousel();\r\n    }\r\n  }\r\n\r\n  window.addEventListener('resize', handleResize);\r\n\r\n  // Initialize responsive layout\r\n  handleResize();\r\n\r\n  // Initialize carousel\r\n  updateCarousel();\r\n\r\n  // Initialize with default tab content (WHS - matches active tab)\r\n  updateCardContent('whs');\r\n});\r\n","// ==========================================================================\r\n// Main JavaScript Entry Point\r\n// ==========================================================================\r\n\r\n/**\r\n * Single entry point for all JavaScript functionality\r\n * All modules are imported here to maintain clean dependency management\r\n */\r\n\r\n// Core functionality modules\r\nimport './header.js'; // Header height compensation and navigation\r\nimport './forms.js'; // Complete forms management system (replaces modal-form + utils)\r\nimport './pricing.js'; // Pricing carousel and tabs\r\n\r\n// ==========================================================================\r\n// Global App Initialization\r\n// ==========================================================================\r\n\r\n/**\r\n * Main application initialization\r\n * Runs after all modules are loaded\r\n */\r\nfunction initializeApp() {\r\n  console.log('🚀 App initialized successfully');\r\n\r\n  // Performance timing\r\n  const loadTime = performance.now();\r\n  console.log(`⚡ JS modules loaded in ${loadTime.toFixed(2)}ms`);\r\n\r\n  // Add any global initialization logic here\r\n  // For example: analytics, global event listeners, etc.\r\n\r\n  // Global smooth scroll for anchor links\r\n  initializeSmoothScroll();\r\n}\r\n\r\n/**\r\n * Initialize smooth scrolling for anchor links\r\n */\r\nfunction initializeSmoothScroll() {\r\n  document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n    anchor.addEventListener('click', function (e) {\r\n      e.preventDefault();\r\n      const target = document.querySelector(this.getAttribute('href'));\r\n      if (target) {\r\n        target.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'start',\r\n        });\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n// Initialize app when DOM is ready\r\ndocument.addEventListener('DOMContentLoaded', initializeApp);\r\n\r\n// ==========================================================================\r\n// Global Error Handling\r\n// ==========================================================================\r\n\r\nwindow.addEventListener('error', function (event) {\r\n  console.error('JavaScript error:', event.error);\r\n\r\n  // In production, you might want to send this to your error tracking service\r\n  // Example: errorTracker.captureException(event.error);\r\n});\r\n\r\nwindow.addEventListener('unhandledrejection', function (event) {\r\n  console.error('Unhandled promise rejection:', event.reason);\r\n});\r\n\r\n// ==========================================================================\r\n// Performance Monitoring (Development)\r\n// ==========================================================================\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  console.log('📊 Development mode - performance monitoring enabled');\r\n\r\n  // Log performance metrics\r\n  window.addEventListener('load', function () {\r\n    const perfData = performance.getEntriesByType('navigation')[0];\r\n    console.log('📈 Performance metrics:', {\r\n      'DOM Content Loaded':\r\n        perfData.domContentLoadedEventEnd -\r\n        perfData.domContentLoadedEventStart +\r\n        'ms',\r\n      'Load Complete': perfData.loadEventEnd - perfData.loadEventStart + 'ms',\r\n      'Total Load Time': perfData.loadEventEnd - perfData.fetchStart + 'ms',\r\n    });\r\n  });\r\n}\r\n\r\n// ==========================================================================\r\n// Export main app for external access if needed\r\n// ==========================================================================\r\n\r\nwindow.OknaApp = {\r\n  version: '1.0.0',\r\n  initialized: false,\r\n  modules: ['header', 'forms', 'pricing'],\r\n};\r\n"],"names":["document","addEventListener","updateBodyPadding","header","querySelector","headerHeight","Math","round","offsetHeight","body","style","paddingTop","resizeTimeout","window","clearTimeout","setTimeout","$123588c018d7eca1$var$TELEGRAM_CONFIG","token1","token2","chatId","mode","token","this","$123588c018d7eca1$var$ym","ym","console","log","$123588c018d7eca1$var$FIELD_CONFIG","tel","name","email","$123588c018d7eca1$var$FORM_TYPES","$123588c018d7eca1$var$registeredForms","Map","$123588c018d7eca1$var$formatPhoneInput","e","match","target","value","replace","result","$123588c018d7eca1$var$validatePhone","phone","test","$123588c018d7eca1$var$getFieldName","key","$123588c018d7eca1$var$sendForm","message","formType","encodedMessage","encodeURI","fetch","then","res","json","ok","$123588c018d7eca1$var$handleSubmissionSuccess","localStorage","setItem","$123588c018d7eca1$var$triggerMetrikaGoal","type","catch","error","$123588c018d7eca1$var$sendToTelegram","goal","$123588c018d7eca1$var$FORM_TYPES_modal","$123588c018d7eca1$var$FORM_TYPES_callback","$123588c018d7eca1$var$FORM_TYPES_mainBlue","$123588c018d7eca1$var$handleFormSubmit","preventDefault","grecaptcha","getResponse","length","alert","form","textName","errorsContainer","remove","formData","FormData","validation","isValid","errors","entries","trimmedValue","trim","push","$123588c018d7eca1$var$showFormErrors","modal","mainForm","nodeName","createElement","className","formFields","insertBefore","appendChild","innerHTML","forEach","errorEl","textContent","successTemplates","$123588c018d7eca1$var$FORM_TYPES_registered","default","template","querySelectorAll","button","$123588c018d7eca1$var$hideModal","classList","$123588c018d7eca1$export$baa372ea1b9da9bd","formId","fields","options","getElementById","warn","config","element","set","$123588c018d7eca1$var$initializeRegisteredForm","input","$123588c018d7eca1$var$initializeModalForm","$123588c018d7eca1$var$createModal","trigger","add","$123588c018d7eca1$var$showModal","BREAKPOINTS","tabs","pricingCards","prevBtn","nextBtn","currentSlide","slidesToShow","totalSlides","maxSlide","max","updateCarousel","firstCard","cardStyles","getComputedStyle","cardWidth","offsetWidth","cardMarginRight","parseInt","marginRight","translateX","transform","disabled","navigateCarousel","direction","newSlide","tab","t","updateCardContent","getAttribute","contentData","whs","brand","profiles","title","price","profile","chambers","size","features","rehau","veka","tabType","cards","data","card","index","titleElement","sizeElement","priceElement","featuresList","slice","featureText","featureItem","startX","startY","isDragging","handleResize","width","innerWidth","newSlidesToShow","maxWidth","slides","Infinity","find","touches","clientX","clientY","currentX","currentY","diffX","abs","endX","changedTouches","diff","loadTime","performance","now","toFixed","anchor","scrollIntoView","behavior","block","event","reason","OknaApp","version","initialized","modules"],"version":3,"file":"d1sa.github.io.e094cfbf.js.map"}