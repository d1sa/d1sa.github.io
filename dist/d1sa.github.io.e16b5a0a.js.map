{"mappings":"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","sources":["src/js/header.js","src/js/toast.js","src/js/forms.js","src/js/pricing.js","src/js/slider.js","src/js/glightbox.js","src/js/main.js"],"sourcesContent":["// ==========================================================================\r\n// Header Height Compensation\r\n// ==========================================================================\r\n\r\n/**\r\n * Компенсирует высоту фиксированного хедера\r\n * Добавляет padding-top к body равный высоте .header\r\n */\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  function updateBodyPadding() {\r\n    const header = document.querySelector('.header');\r\n    if (header) {\r\n      const headerHeight = Math.round(header.offsetHeight);\r\n      if (headerHeight > 0) {\r\n        document.body.style.paddingTop = headerHeight + 'px';\r\n      }\r\n    }\r\n  }\r\n\r\n  // Применяем при загрузке\r\n  updateBodyPadding();\r\n\r\n  // Debounce для resize\r\n  let resizeTimeout;\r\n  window.addEventListener('resize', function () {\r\n    clearTimeout(resizeTimeout);\r\n    resizeTimeout = setTimeout(updateBodyPadding, 100);\r\n  });\r\n\r\n  // Обработка изменения ориентации\r\n  window.addEventListener('orientationchange', function () {\r\n    setTimeout(updateBodyPadding, 200);\r\n  });\r\n});\r\n\r\n// ==========================================================================\r\n// Mobile Menu Functionality\r\n// ==========================================================================\r\n\r\n/**\r\n * Управление мобильным меню\r\n */\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  const header = document.querySelector('.header');\r\n  const mobileMenuToggle = document.querySelector('.mobile-menu-toggle');\r\n  const mobileMenuOverlay = document.querySelector('.mobile-menu-overlay');\r\n  const navLinks = document.querySelectorAll('.nav-link');\r\n\r\n  if (!mobileMenuToggle || !header) return;\r\n\r\n  // Открытие/закрытие мобильного меню\r\n  function toggleMobileMenu() {\r\n    const isOpen = header.classList.contains('mobile-menu-open');\r\n\r\n    if (isOpen) {\r\n      closeMobileMenu();\r\n    } else {\r\n      openMobileMenu();\r\n    }\r\n  }\r\n\r\n  // Открытие мобильного меню\r\n  function openMobileMenu() {\r\n    header.classList.add('mobile-menu-open');\r\n    document.body.style.overflow = 'hidden';\r\n    mobileMenuToggle.setAttribute('aria-expanded', 'true');\r\n    mobileMenuToggle.setAttribute('aria-label', 'Закрыть меню');\r\n\r\n    // Фокус на первую ссылку в меню\r\n    const firstNavLink = document.querySelector('.nav-link');\r\n    if (firstNavLink) {\r\n      setTimeout(() => firstNavLink.focus(), 300);\r\n    }\r\n  }\r\n\r\n  // Закрытие мобильного меню\r\n  function closeMobileMenu() {\r\n    header.classList.remove('mobile-menu-open');\r\n    document.body.style.overflow = '';\r\n    mobileMenuToggle.setAttribute('aria-expanded', 'false');\r\n    mobileMenuToggle.setAttribute('aria-label', 'Открыть меню');\r\n\r\n    // Возвращаем фокус на кнопку меню\r\n    mobileMenuToggle.focus();\r\n  }\r\n\r\n  // Обработчик клика по кнопке гамбургера\r\n  mobileMenuToggle.addEventListener('click', function (e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    toggleMobileMenu();\r\n  });\r\n\r\n  // Обработчик клика по оверлею\r\n  if (mobileMenuOverlay) {\r\n    mobileMenuOverlay.addEventListener('click', function () {\r\n      closeMobileMenu();\r\n    });\r\n  }\r\n\r\n  // Закрытие меню при клике на ссылки навигации\r\n  navLinks.forEach(link => {\r\n    link.addEventListener('click', function () {\r\n      // Небольшая задержка для плавности\r\n      setTimeout(() => {\r\n        closeMobileMenu();\r\n      }, 150);\r\n    });\r\n  });\r\n\r\n  // Закрытие меню при нажатии Escape\r\n  document.addEventListener('keydown', function (e) {\r\n    if (e.key === 'Escape' && header.classList.contains('mobile-menu-open')) {\r\n      closeMobileMenu();\r\n    }\r\n  });\r\n\r\n  // Закрытие меню при изменении размера экрана\r\n  window.addEventListener('resize', function () {\r\n    if (window.innerWidth >= 768) {\r\n      // tablet breakpoint\r\n      closeMobileMenu();\r\n    }\r\n  });\r\n\r\n  // Обработка фокуса для доступности\r\n  function trapFocus(container) {\r\n    const focusableElements = container.querySelectorAll(\r\n      'a[href], button, textarea, input[type=\"text\"], input[type=\"radio\"], input[type=\"checkbox\"], select'\r\n    );\r\n    const firstFocusableElement = focusableElements[0];\r\n    const lastFocusableElement =\r\n      focusableElements[focusableElements.length - 1];\r\n\r\n    container.addEventListener('keydown', function (e) {\r\n      if (e.key === 'Tab') {\r\n        if (e.shiftKey) {\r\n          if (document.activeElement === firstFocusableElement) {\r\n            lastFocusableElement.focus();\r\n            e.preventDefault();\r\n          }\r\n        } else {\r\n          if (document.activeElement === lastFocusableElement) {\r\n            firstFocusableElement.focus();\r\n            e.preventDefault();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // Применяем trap focus к мобильному меню\r\n  const navWrapper = document.querySelector('.nav-and-actions-wrapper');\r\n  if (navWrapper) {\r\n    trapFocus(navWrapper);\r\n  }\r\n});\r\n","// ==========================================================================\r\n// Toast Notification Component\r\n// ==========================================================================\r\n\r\n/**\r\n * Create toast notification container if it doesn't exist\r\n */\r\nconst createToastContainer = () => {\r\n  let container = document.getElementById('toast-container');\r\n  if (!container) {\r\n    container = document.createElement('div');\r\n    container.id = 'toast-container';\r\n    container.className = 'toast-container';\r\n    document.body.appendChild(container);\r\n  }\r\n  return container;\r\n};\r\n\r\n/**\r\n * Create individual toast element\r\n * @param {string} message - Error message\r\n * @param {string} type - Toast type (error, success, info)\r\n * @param {number} duration - Duration in milliseconds\r\n * @returns {HTMLElement} - Toast element\r\n */\r\nconst createToast = (message, type = 'error', duration = 12000) => {\r\n  const toast = document.createElement('div');\r\n  toast.className = `toast toast-${type}`;\r\n\r\n  const getIcon = type => {\r\n    if (type === 'error') {\r\n      return `<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 1.5C6.15 1.5 1.5 6.15 1.5 12C1.5 17.85 6.15 22.5 12 22.5C17.85 22.5 22.5 17.85 22.5 12C22.5 6.15 17.85 1.5 12 1.5ZM16.05 17.25L12 13.2L7.95 17.25L6.75 16.05L10.8 12L6.75 7.95L7.95 6.75L12 10.8L16.05 6.75L17.25 7.95L13.2 12L17.25 16.05L16.05 17.25Z\" fill=\"white\"/>\r\n      </svg>`;\r\n    }\r\n    if (type === 'success') {\r\n      return `<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 1.5C9.9233 1.5 7.89323 2.11581 6.16652 3.26957C4.4398 4.42332 3.09399 6.0632 2.29927 7.98182C1.50455 9.90045 1.29661 12.0116 1.70176 14.0484C2.1069 16.0852 3.10693 17.9562 4.57538 19.4246C6.04383 20.8931 7.91476 21.8931 9.95156 22.2982C11.9884 22.7034 14.0996 22.4955 16.0182 21.7007C17.9368 20.906 19.5767 19.5602 20.7304 17.8335C21.8842 16.1068 22.5 14.0767 22.5 12C22.5 9.21523 21.3938 6.54451 19.4246 4.57538C17.4555 2.60625 14.7848 1.5 12 1.5ZM10.5 16.1925L6.75 12.4425L7.94251 11.25L10.5 13.8075L16.0575 8.25L17.2545 9.4395L10.5 16.1925Z\" fill=\"white\"/>\r\n      </svg>`;\r\n    }\r\n    return 'ℹ️'; // default for info\r\n  };\r\n\r\n  toast.innerHTML = `\r\n    <div class=\"toast-content\">\r\n      <div class=\"toast-icon\">\r\n        ${getIcon(type)}\r\n      </div>\r\n      <div class=\"toast-message\">${message}</div>\r\n      <button class=\"toast-close\" aria-label=\"Закрыть уведомление\">\r\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\">\r\n          <path d=\"M13 1L1 13M1 1L13 13\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"/>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n    <div class=\"toast-progress\"></div>\r\n  `;\r\n\r\n  return toast;\r\n};\r\n\r\n/**\r\n * Show toast notification\r\n * @param {string} message - Message to show\r\n * @param {string} type - Toast type (error, success, info)\r\n * @param {number} duration - Duration in milliseconds (default: 12000)\r\n */\r\nconst showToast = (message, type = 'error', duration = 12000) => {\r\n  const container = createToastContainer();\r\n  const toast = createToast(message, type, duration);\r\n\r\n  // Add unique ID to toast for debugging and isolation\r\n  const toastId = `toast-${Date.now()}-${Math.random()\r\n    .toString(36)\r\n    .substr(2, 5)}`;\r\n  toast.dataset.toastId = toastId;\r\n\r\n  // Add toast to container\r\n  container.appendChild(toast);\r\n\r\n  // Trigger animation after DOM insertion\r\n  setTimeout(() => {\r\n    toast.classList.add('toast-show');\r\n\r\n    // Start progress bar animation after toast is visible\r\n    setTimeout(() => {\r\n      const progressBar = toast.querySelector('.toast-progress');\r\n      if (progressBar) {\r\n        progressBar.style.animationDuration = `${duration / 1000}s`;\r\n        progressBar.style.animationName = 'toast-progress';\r\n        progressBar.style.animationPlayState = 'running';\r\n      }\r\n    }, 50);\r\n  }, 10);\r\n\r\n  // Setup close button\r\n  const closeBtn = toast.querySelector('.toast-close');\r\n  closeBtn.addEventListener('click', () => {\r\n    hideToast(toast);\r\n  });\r\n\r\n  // Simple timer management - each toast has its own isolated state\r\n  let autoHideTimeout = null;\r\n  let isPaused = false;\r\n  let isDestroyed = false;\r\n  let startTime = Date.now();\r\n  let totalPausedTime = 0; // Общее время, проведенное на паузе\r\n  let pauseStartTime = 0; // Время начала текущей паузы\r\n\r\n  // Function to start auto-hide timer\r\n  const startAutoHideTimer = () => {\r\n    if (isDestroyed || isPaused) return;\r\n\r\n    const elapsed = Date.now() - startTime - totalPausedTime;\r\n    const remaining = Math.max(0, duration - elapsed);\r\n\r\n    if (remaining <= 0) {\r\n      hideToast(toast);\r\n      return;\r\n    }\r\n\r\n    // Clear any existing timeout\r\n    if (autoHideTimeout) {\r\n      clearTimeout(autoHideTimeout);\r\n    }\r\n\r\n    autoHideTimeout = setTimeout(() => {\r\n      if (!isDestroyed && !isPaused) {\r\n        hideToast(toast);\r\n      }\r\n    }, remaining);\r\n  };\r\n\r\n  // Function to pause toast\r\n  const pauseToast = () => {\r\n    if (isPaused || isDestroyed) return;\r\n\r\n    isPaused = true;\r\n    pauseStartTime = Date.now();\r\n\r\n    // Pause progress bar animation\r\n    const progressBar = toast.querySelector('.toast-progress');\r\n    if (progressBar) {\r\n      progressBar.style.animationPlayState = 'paused';\r\n    }\r\n\r\n    // Clear timer\r\n    if (autoHideTimeout) {\r\n      clearTimeout(autoHideTimeout);\r\n      autoHideTimeout = null;\r\n    }\r\n  };\r\n\r\n  // Function to resume toast\r\n  const resumeToast = () => {\r\n    if (!isPaused || isDestroyed) return;\r\n\r\n    // Add current pause duration to total paused time\r\n    totalPausedTime += Date.now() - pauseStartTime;\r\n    isPaused = false;\r\n\r\n    // Resume progress bar animation\r\n    const progressBar = toast.querySelector('.toast-progress');\r\n    if (progressBar) {\r\n      progressBar.style.animationPlayState = 'running';\r\n    }\r\n\r\n    // Restart timer for remaining time\r\n    startAutoHideTimer();\r\n  };\r\n\r\n  // Setup hover effects - isolated for this specific toast\r\n  let isHovered = false;\r\n\r\n  const handleMouseEnter = () => {\r\n    if (isHovered || isDestroyed) return;\r\n    isHovered = true;\r\n    pauseToast();\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    if (!isHovered || isDestroyed) return;\r\n    isHovered = false;\r\n    resumeToast();\r\n  };\r\n\r\n  // Bind events to this specific toast element\r\n  toast.addEventListener('mouseenter', handleMouseEnter);\r\n  toast.addEventListener('mouseleave', handleMouseLeave);\r\n\r\n  // Cleanup function - isolated for this toast instance\r\n  const cleanup = () => {\r\n    isDestroyed = true;\r\n    if (autoHideTimeout) {\r\n      clearTimeout(autoHideTimeout);\r\n      autoHideTimeout = null;\r\n    }\r\n    toast.removeEventListener('mouseenter', handleMouseEnter);\r\n    toast.removeEventListener('mouseleave', handleMouseLeave);\r\n  };\r\n\r\n  // Store cleanup function\r\n  toast._cleanup = cleanup;\r\n\r\n  // Start initial timer\r\n  startAutoHideTimer();\r\n\r\n  return toast;\r\n};\r\n\r\n/**\r\n * Hide toast notification\r\n * @param {HTMLElement} toast - Toast element to hide\r\n */\r\nconst hideToast = toast => {\r\n  if (!toast || !toast.parentNode) return;\r\n\r\n  // Call cleanup function if it exists\r\n  if (typeof toast._cleanup === 'function') {\r\n    toast._cleanup();\r\n  }\r\n\r\n  // Clear timeout if exists\r\n  if (toast.dataset.timeoutId) {\r\n    clearTimeout(parseInt(toast.dataset.timeoutId));\r\n  }\r\n\r\n  // Add hide animation\r\n  toast.classList.add('toast-hide');\r\n\r\n  // Remove from DOM after animation\r\n  setTimeout(() => {\r\n    if (toast.parentNode) {\r\n      toast.parentNode.removeChild(toast);\r\n    }\r\n  }, 300); // Match CSS transition duration\r\n};\r\n\r\n// Export functions for use in other modules\r\nexport { showToast, hideToast, createToast, createToastContainer };\r\n","// ==========================================================================\r\n// Forms Management System - Main File\r\n// ==========================================================================\r\n\r\n// Import toast functions from separate module\r\nimport { showToast, hideToast } from './toast.js';\r\n\r\n// ==========================================================================\r\n// Configuration\r\n// ==========================================================================\r\n\r\n// Telegram Bot Configuration\r\nconst TELEGRAM_CONFIG = {\r\n  token1: '', // тг бот токен ч1\r\n  token2: '', // тг бот токен ч2\r\n  chatId: '', // тг чат id\r\n  mode: 'html',\r\n  get token() {\r\n    return `${this.token1}:${this.token2}`;\r\n  },\r\n};\r\n\r\n// Yandex Metrika integration\r\nconst ym = window.ym;\r\nif (!ym) {\r\n  console.log('Yandex Metrika не найдена');\r\n}\r\n\r\n// Form field configurations\r\nconst FIELD_CONFIG = {\r\n  tel: 'Контактный телефон',\r\n  name: 'Имя',\r\n  email: 'Email (Необязательно)',\r\n};\r\n\r\n// Form types configuration\r\nconst FORM_TYPES = {\r\n  modal: 'modalForm',\r\n  registered: 'registeredForm',\r\n  callback: 'callbackForm',\r\n  mainBlue: 'mainBlueForm',\r\n};\r\n\r\n// Registered forms storage\r\nconst registeredForms = new Map();\r\n\r\n// ==========================================================================\r\n// Utilities (integrated from utils.js)\r\n// ==========================================================================\r\n\r\n/**\r\n * Phone number formatting with live input mask\r\n * @param {Event} e - Input event\r\n */\r\nconst formatPhoneInput = e => {\r\n  const val = e.target.value;\r\n  const digits = val.replace(/\\D/g, '');\r\n  const match = digits.match(/(7|8)?(\\d{0,3})(\\d{0,3})(\\d{0,2})(\\d{0,2})/);\r\n\r\n  let result = '+7 ';\r\n\r\n  if (match[2]) {\r\n    result += '(' + match[2];\r\n    if (match[2] && match[3]) {\r\n      result += ')';\r\n    }\r\n  }\r\n\r\n  if (match[3]) {\r\n    result += ' ' + match[3];\r\n  }\r\n\r\n  if (match[4]) {\r\n    result += ' ' + match[4];\r\n  }\r\n\r\n  if (match[5]) {\r\n    result += '-' + match[5];\r\n  }\r\n\r\n  e.target.value = result;\r\n};\r\n\r\n/**\r\n * Validate Russian phone number\r\n * @param {string} phone - Phone number string\r\n * @returns {boolean} - Is valid\r\n */\r\nconst validatePhone = phone => {\r\n  const regex =\r\n    /^(\\+7|7|8)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/;\r\n  return regex.test(phone);\r\n};\r\n\r\n/**\r\n * Get field display name\r\n * @param {string} key - Field key\r\n * @returns {string} - Display name\r\n */\r\nconst getFieldName = key => {\r\n  return FIELD_CONFIG[key] || key;\r\n};\r\n\r\n// ==========================================================================\r\n// Telegram Bot Integration\r\n// ==========================================================================\r\n\r\n/**\r\n * Send message to Telegram bot\r\n * @param {Object} params - Message parameters\r\n */\r\nconst sendToTelegram = ({ message, formType }) => {\r\n  const { token, chatId, mode } = TELEGRAM_CONFIG;\r\n  const encodedMessage = encodeURI(message);\r\n  const url = `https://api.telegram.org/bot${token}/sendMessage?chat_id=${chatId}&parse_mode=${mode}&text=${encodedMessage}`;\r\n\r\n  fetch(url)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log('Telegram API response:', res);\r\n\r\n      if (res.ok) {\r\n        handleSubmissionSuccess(formType);\r\n        localStorage.setItem('formSended', true);\r\n\r\n        // Yandex Metrika goals\r\n        triggerMetrikaGoal(formType.type);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Telegram sending error:', error);\r\n      // Fallback to success for better UX\r\n      handleSubmissionSuccess(formType);\r\n    });\r\n};\r\n\r\n/**\r\n * Fallback for development/testing\r\n * @param {Object} params - Message parameters\r\n */\r\nconst sendToTelegramFake = ({ message, formType }) => {\r\n  localStorage.setItem('formSended', true);\r\n\r\n  console.group(`📋 ФОРМА ОТПРАВЛЕНА (DEV MODE)`);\r\n  console.log(`📝 Тип формы: ${formType.textName}`);\r\n  console.log(`🏷️ Form Type: ${formType.type}`);\r\n  console.log(`📄 Сообщение для отправки:`);\r\n  console.log(decodeURI(message));\r\n  console.log(`📊 Время: ${new Date().toLocaleString()}`);\r\n  console.log(`💾 localStorage.formSended = true`);\r\n  console.groupEnd();\r\n\r\n  // Simulate network delay for realistic testing\r\n  setTimeout(() => {\r\n    console.log(`✅ Форма успешно \"отправлена\" (имитация)`);\r\n    handleSubmissionSuccess(formType);\r\n    // Trigger Metrika in dev mode too for testing\r\n    triggerMetrikaGoal(formType.type);\r\n  }, 800);\r\n};\r\n\r\n/**\r\n * Smart form sender - automatically chooses real or fake based on environment\r\n * @param {Object} params - Message parameters\r\n */\r\nconst sendForm = ({ message, formType }) => {\r\n  const isDevelopment = process.env.NODE_ENV !== 'production';\r\n\r\n  if (isDevelopment) {\r\n    console.log('🚀 Development mode - using fake form sending');\r\n    sendToTelegramFake({ message, formType });\r\n  } else {\r\n    console.log('📤 Production mode - sending to Telegram bot');\r\n    sendToTelegram({ message, formType });\r\n  }\r\n};\r\n\r\n/**\r\n * Trigger Yandex Metrika goals\r\n * @param {string} formType - Form type\r\n */\r\nconst triggerMetrikaGoal = formType => {\r\n  if (!ym) return;\r\n\r\n  const goalMap = {\r\n    [FORM_TYPES.modal]: 'new_lid',\r\n    [FORM_TYPES.callback]: 'new_lid',\r\n    [FORM_TYPES.mainBlue]: 'new_lid',\r\n  };\r\n\r\n  const goal = goalMap[formType];\r\n  if (goal) {\r\n    ym(75394450, 'reachGoal', goal);\r\n  }\r\n};\r\n\r\n// ==========================================================================\r\n// Form Processing\r\n// ==========================================================================\r\n\r\n/**\r\n * Handle form submission\r\n * @param {Object} formType - Form type configuration\r\n * @returns {Function} - Event handler\r\n */\r\nconst handleFormSubmit = formType => e => {\r\n  e.preventDefault();\r\n\r\n  // reCAPTCHA check for modal forms\r\n  if (formType.type === FORM_TYPES.modal && typeof grecaptcha !== 'undefined') {\r\n    const response = grecaptcha.getResponse();\r\n    if (response.length === 0) {\r\n      showToast('Пожалуйста, подтвердите, что вы не робот!', 'error', 8000);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const form = e.target;\r\n  const { textName } = formType;\r\n\r\n  // Clear previous errors\r\n  const errorsContainer = form.querySelector('.errorsContainer');\r\n  if (errorsContainer) {\r\n    errorsContainer.remove();\r\n  }\r\n\r\n  // Build message\r\n  let message = `<b>Новая заявка с сайта oknanaveka40.ru</b>\\n––––\\n\\n`;\r\n\r\n  const formData = new FormData(form);\r\n  const validation = { isValid: true, errors: [] };\r\n\r\n  // Process and validate form data\r\n  for (let [key, value] of formData.entries()) {\r\n    if (key === 'g-recaptcha-response') continue;\r\n\r\n    const trimmedValue = value.trim();\r\n\r\n    // Validation for required fields\r\n    if (key === 'name') {\r\n      if (!trimmedValue || trimmedValue.length < 2) {\r\n        validation.isValid = false;\r\n        validation.errors.push('Имя не может быть пустым');\r\n      }\r\n    }\r\n\r\n    if (key === 'tel') {\r\n      if (!trimmedValue || trimmedValue === '+7' || trimmedValue === '+7 ') {\r\n        validation.isValid = false;\r\n        validation.errors.push('Введите номер телефона');\r\n      } else if (!validatePhone(trimmedValue)) {\r\n        validation.isValid = false;\r\n        validation.errors.push('Введите корректный телефон');\r\n      }\r\n    }\r\n\r\n    // Add to message only if field has value\r\n    if (trimmedValue) {\r\n      message += `<i>${getFieldName(key)}</i>: <b>${trimmedValue}</b>\\n`;\r\n    }\r\n  }\r\n\r\n  message += `\\n\\n<i>${textName ? `(${textName})` : ''}</i>`;\r\n\r\n  // Handle validation errors\r\n  if (!validation.isValid) {\r\n    showFormErrors(validation, formType);\r\n    return;\r\n  }\r\n\r\n  // Send form using smart sender (auto-detects dev/prod mode)\r\n  sendForm({ message, formType });\r\n};\r\n\r\n/**\r\n * Show form validation errors as toast notifications\r\n * @param {Object} validation - Validation result\r\n * @param {Object} formType - Form type\r\n */\r\nconst showFormErrors = (validation, formType) => {\r\n  // Show each error as a separate toast\r\n  validation.errors.forEach((error, index) => {\r\n    // Stagger toast appearances slightly\r\n    setTimeout(() => {\r\n      showToast(error, 'error', 12000);\r\n    }, index * 200);\r\n  });\r\n\r\n  // Remove old inline error containers if they exist\r\n  const { modal } = formType;\r\n  const mainForm =\r\n    modal.nodeName === 'FORM' ? modal : modal.querySelector('.contact-form');\r\n  const errorsContainer = mainForm.querySelector('.errorsContainer');\r\n  if (errorsContainer) {\r\n    errorsContainer.remove();\r\n  }\r\n};\r\n\r\n/**\r\n * Handle successful form submission\r\n * @param {Object} formType - Form type\r\n */\r\nconst handleSubmissionSuccess = formType => {\r\n  const { type, modal } = formType;\r\n\r\n  // Show success toast notification\r\n  showToast(\r\n    'Заявка успешно отправлена! Мы свяжемся с вами в ближайшее время.',\r\n    'success',\r\n    18000\r\n  );\r\n\r\n  // For modal forms, add success tag and close modal\r\n  if (type === FORM_TYPES.modal) {\r\n    // Add success tag immediately\r\n    updateModalSuccessTag(modal);\r\n\r\n    setTimeout(() => {\r\n      hideModal(modal);\r\n      // Reset form after closing modal\r\n      const form = modal.querySelector('.contact-form');\r\n      if (form) {\r\n        form.reset();\r\n        // Reset phone input to default value\r\n        const phoneInput = form.querySelector('input[type=\"tel\"]');\r\n        if (phoneInput) {\r\n          phoneInput.value = '+7 ';\r\n        }\r\n      }\r\n    }, 1000);\r\n  } else {\r\n    // For registered forms, reset the form\r\n    const mainForm =\r\n      modal.nodeName === 'FORM' ? modal : modal.querySelector('.contact-form');\r\n    if (mainForm) {\r\n      mainForm.reset();\r\n      // Reset phone input to default value\r\n      const phoneInput = mainForm.querySelector('input[type=\"tel\"]');\r\n      if (phoneInput) {\r\n        phoneInput.value = '+7 ';\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// ==========================================================================\r\n// Modal System\r\n// ==========================================================================\r\n\r\n/**\r\n * Create modal HTML\r\n * @param {Object} config - Modal configuration\r\n * @returns {string} - Modal HTML\r\n */\r\nconst createModalHTML = config => {\r\n  return `\r\n    <div class='modal-container'>\r\n      <div class='modal-close modal-close-icon'></div>\r\n      <div class='form-content'>\r\n        <form class='contact-form'>  \r\n          <div class='form-header'>\r\n            <h3>Оставьте заявку</h3>\r\n            <p>Мы свяжемся с вами как можно раньше</p>\r\n          </div>\r\n          <div class='form-fields'>\r\n            <div class='form-field'>\r\n              <input type='text' name='name' placeholder='Ваше имя' class='input input-solid' />\r\n            </div>\r\n            <div class='form-field'>\r\n              <input type='tel' name='tel' placeholder='+7' class='input input-solid' minlength=\"10\" value='+7 ' />\r\n            </div>\r\n          </div>\r\n          <button type='submit' class='btn btn-orange'>Отправить</button>\r\n          <p class='form-disclaimer'>\r\n            Отправляя данные через форму вы даете согласие на обработку своих \r\n            <span>персональных данных</span>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  `;\r\n};\r\n\r\n/**\r\n * Create success tag HTML\r\n * @returns {string} - Success tag HTML\r\n */\r\nconst createSuccessTagHTML = () => {\r\n  return `\r\n    <div class=\"form-tag\">\r\n      <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\">\r\n        <path d=\"M1 5.35L4.75 9.25L11 2.75\" stroke=\"#2BB109\" stroke-width=\"2\"></path>\r\n      </svg>\r\n      <span>Заявка отправлена! Мы скоро свяжемся с вами</span>\r\n    </div>\r\n  `;\r\n};\r\n\r\n/**\r\n * Create modal element\r\n * @param {Object} formType - Form type configuration\r\n * @returns {HTMLElement} - Modal element\r\n */\r\nconst createModal = formType => {\r\n  const modal = document.createElement('div');\r\n  modal.className = `modal-form ${formType.type}`;\r\n  modal.innerHTML = createModalHTML(formType);\r\n  return modal;\r\n};\r\n\r\n/**\r\n * Show modal\r\n * @param {HTMLElement} modal - Modal element\r\n */\r\nconst showModal = modal => {\r\n  modal.classList.add('show');\r\n};\r\n\r\n/**\r\n * Hide modal\r\n * @param {HTMLElement} modal - Modal element\r\n */\r\nconst hideModal = modal => {\r\n  modal.classList.remove('show');\r\n};\r\n\r\n/**\r\n * Update modal content with success tag if form was sent\r\n * @param {HTMLElement} modal - Modal element\r\n */\r\nconst updateModalSuccessTag = modal => {\r\n  const isFormSent = localStorage.getItem('formSended') === 'true';\r\n  const formContent = modal.querySelector('.form-content .form-header');\r\n  const existingTag = modal.querySelector('.form-tag');\r\n\r\n  // Remove existing tag if present\r\n  if (existingTag) {\r\n    existingTag.remove();\r\n  }\r\n\r\n  // Add success tag if form was sent\r\n  if (isFormSent && formContent) {\r\n    const tagElement = document.createElement('div');\r\n    tagElement.innerHTML = createSuccessTagHTML();\r\n    const tag = tagElement.firstElementChild;\r\n\r\n    // Insert tag at the beginning of form-content\r\n    formContent.insertBefore(tag, formContent.firstChild);\r\n  }\r\n};\r\n\r\n// ==========================================================================\r\n// Form Registration & Initialization\r\n// ==========================================================================\r\n\r\n/**\r\n * Register a form for processing\r\n * @param {string} formId - Form ID\r\n * @param {Array} fields - Expected fields\r\n * @param {Object} options - Additional options\r\n */\r\nexport function registerForm(formId, fields, options = {}) {\r\n  const form = document.getElementById(formId);\r\n  if (!form) {\r\n    console.warn(`Form with ID \"${formId}\" not found`);\r\n    return;\r\n  }\r\n\r\n  const config = {\r\n    fields,\r\n    options,\r\n    element: form,\r\n    type: FORM_TYPES.registered,\r\n    textName: options.textName || 'Зарегистрированная форма',\r\n  };\r\n\r\n  registeredForms.set(formId, config);\r\n  initializeRegisteredForm(config);\r\n}\r\n\r\n/**\r\n * Initialize registered form\r\n * @param {Object} config - Form configuration\r\n */\r\nconst initializeRegisteredForm = config => {\r\n  const { element: form, textName } = config;\r\n\r\n  // Initialize phone inputs\r\n  const phoneInputs = form.querySelectorAll('input[type=\"tel\"]');\r\n  phoneInputs.forEach(input => {\r\n    input.addEventListener('input', formatPhoneInput);\r\n    if (!input.value || input.value === '+7') {\r\n      input.value = '+7 ';\r\n    }\r\n  });\r\n\r\n  // Create form type for submission\r\n  const formType = {\r\n    type: FORM_TYPES.registered,\r\n    textName: textName,\r\n    modal: form,\r\n  };\r\n\r\n  // Handle form submission\r\n  form.addEventListener('submit', handleFormSubmit(formType));\r\n};\r\n\r\n/**\r\n * Initialize modal form system\r\n */\r\nconst initializeModalForm = () => {\r\n  const formType = {\r\n    type: FORM_TYPES.modal,\r\n    textName: 'Всплывающая форма',\r\n  };\r\n\r\n  const modal = createModal(formType);\r\n  formType.modal = modal;\r\n\r\n  // Initial setup for form content\r\n  const form = modal.querySelector('.contact-form');\r\n  if (form) {\r\n    form.addEventListener('submit', handleFormSubmit(formType));\r\n\r\n    // Setup phone input\r\n    const phoneInput = modal.querySelector('input[type=\"tel\"]');\r\n    if (phoneInput) {\r\n      phoneInput.addEventListener('input', formatPhoneInput);\r\n    }\r\n  }\r\n\r\n  // Add to DOM\r\n  document.body.appendChild(modal);\r\n\r\n  // Setup initial close handlers\r\n  const closeIcon = modal.querySelector('.modal-close-icon');\r\n  if (closeIcon) {\r\n    closeIcon.addEventListener('click', e => {\r\n      e.preventDefault();\r\n      hideModal(modal);\r\n    });\r\n  }\r\n\r\n  // Close on backdrop click\r\n  window.addEventListener('click', e => {\r\n    if (e.target === modal) {\r\n      hideModal(modal);\r\n    }\r\n  });\r\n\r\n  // Setup modal triggers\r\n  const modalTriggers = document.querySelectorAll(\r\n    '[href=\"/forma-obratnoj-svyaz\"], .modal-trigger'\r\n  );\r\n  modalTriggers.forEach(trigger => {\r\n    trigger.addEventListener('click', e => {\r\n      e.preventDefault();\r\n      updateModalSuccessTag(modal);\r\n      showModal(modal);\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Initialize all form systems\r\n */\r\nexport function initializeForms() {\r\n  const isDevelopment = process.env.NODE_ENV !== 'production';\r\n\r\n  console.log('🚀 Initializing Forms System...');\r\n  console.log(\r\n    `🔧 Mode: ${\r\n      isDevelopment ? 'Development (fake sending)' : 'Production (real sending)'\r\n    }`\r\n  );\r\n\r\n  // Initialize modal system\r\n  initializeModalForm();\r\n\r\n  // Auto-register common forms\r\n  registerForm('contactForm', ['name', 'tel'], {\r\n    textName: 'Форма Hero секции',\r\n  });\r\n\r\n  registerForm('leadForm', ['tel'], {\r\n    textName: 'Основная лид-форма',\r\n  });\r\n\r\n  registerForm('reviewLeadForm', ['name', 'tel'], {\r\n    textName: 'Форма отзывов',\r\n  });\r\n\r\n  console.log(`✅ Registered forms`);\r\n}\r\n\r\n// Auto-initialize when DOM is ready\r\ndocument.addEventListener('DOMContentLoaded', initializeForms);\r\n\r\n// Re-export toast functions for backward compatibility\r\nexport { showToast, hideToast } from './toast.js';\r\n","document.addEventListener('DOMContentLoaded', function () {\r\n  const tabs = document.querySelectorAll('.pricing-tabs .tab');\r\n  const carouselContainers = document.querySelectorAll(\r\n    '.pricing-carousel-container'\r\n  );\r\n\r\n  function switchTab(tabType) {\r\n    carouselContainers.forEach(container => {\r\n      container.style.display = 'none';\r\n    });\r\n\r\n    const targetContainer = document.querySelector(\r\n      `.pricing-carousel-container[data-tab=\"${tabType}\"]`\r\n    );\r\n    if (targetContainer) {\r\n      targetContainer.style.display = 'block';\r\n    }\r\n  }\r\n\r\n  tabs.forEach(tab => {\r\n    tab.addEventListener('click', function () {\r\n      tabs.forEach(t => t.classList.remove('active'));\r\n\r\n      this.classList.add('active');\r\n\r\n      const tabType = this.getAttribute('data-tab');\r\n      console.log(tabType);\r\n      switchTab(tabType);\r\n    });\r\n  });\r\n\r\n  switchTab('whs');\r\n});\r\n\r\nfunction debounce(func, delay) {\r\n  let timeout;\r\n\r\n  return function (...args) {\r\n    const context = this;\r\n\r\n    clearTimeout(timeout);\r\n\r\n    timeout = setTimeout(() => {\r\n      func.apply(context, args);\r\n    }, delay);\r\n  };\r\n}\r\n\r\ndocument.fonts.addEventListener('loadingdone', function () {\r\n  const profileComparison = document.querySelector('.profile-comparison');\r\n  const titles = profileComparison.querySelectorAll('.card-title');\r\n  const headers = profileComparison.querySelectorAll('.card-header');\r\n\r\n  function getMaxHeight() {\r\n    let maxHeight = 0;\r\n\r\n    titles.forEach(title => {\r\n      maxHeight = Math.max(maxHeight, title.offsetHeight);\r\n    });\r\n\r\n    return maxHeight;\r\n  }\r\n\r\n  const maxHeight = getMaxHeight();\r\n  headers.forEach(h => {\r\n    h.style.minHeight = `${maxHeight}px`;\r\n  });\r\n\r\n  window.addEventListener('resize', () => {\r\n    const maxHeight = getMaxHeight();\r\n    headers.forEach(h => {\r\n      h.style.minHeight = `${maxHeight}px`;\r\n    });\r\n  });\r\n});\r\n","document.addEventListener('DOMContentLoaded', function () {\r\n  let swiperPricing1 = new Swiper('.swiper-section-pricing-1', {\r\n    slidesPerView: 1,\r\n    spaceBetween: 24,\r\n    navigation: {\r\n      nextEl: '.swiper-button-next-1',\r\n      prevEl: '.swiper-button-prev-1',\r\n    },\r\n    pagination: {\r\n      el: '.swiper-pagination-1',\r\n      clickable: true,\r\n    },\r\n    breakpoints: {\r\n      390: {\r\n        slidesPerView: 2,\r\n        spaceBetween: 16,\r\n      },\r\n      768: {\r\n        slidesPerView: 3,\r\n        spaceBetween: 24,\r\n      },\r\n      1024: {\r\n        slidesPerView: 4,\r\n        spaceBetween: 24,\r\n      },\r\n    },\r\n  });\r\n\r\n  let swiperPricing2 = new Swiper('.swiper-section-pricing-2', {\r\n    slidesPerView: 1,\r\n    spaceBetween: 24,\r\n    navigation: {\r\n      nextEl: '.swiper-button-next-2',\r\n      prevEl: '.swiper-button-prev-2',\r\n    },\r\n    pagination: {\r\n      el: '.swiper-pagination-2',\r\n      clickable: true,\r\n    },\r\n    breakpoints: {\r\n      390: {\r\n        slidesPerView: 2,\r\n        spaceBetween: 16,\r\n      },\r\n      768: {\r\n        slidesPerView: 3,\r\n        spaceBetween: 24,\r\n      },\r\n      1024: {\r\n        slidesPerView: 4,\r\n        spaceBetween: 24,\r\n      },\r\n    },\r\n  });\r\n  let swiperPricing3 = new Swiper('.swiper-section-pricing-3', {\r\n    slidesPerView: 1,\r\n    spaceBetween: 24,\r\n    navigation: {\r\n      nextEl: '.swiper-button-next-3',\r\n      prevEl: '.swiper-button-prev-3',\r\n    },\r\n    pagination: {\r\n      el: '.swiper-pagination-3',\r\n      clickable: true,\r\n    },\r\n    breakpoints: {\r\n      390: {\r\n        slidesPerView: 2,\r\n        spaceBetween: 16,\r\n      },\r\n      768: {\r\n        slidesPerView: 3,\r\n        spaceBetween: 24,\r\n      },\r\n      1024: {\r\n        slidesPerView: 4,\r\n        spaceBetween: 24,\r\n      },\r\n    },\r\n  });\r\n\r\n  let swiperComparison1 = new Swiper('.swiper-section-comparison-1', {\r\n    slidesPerView: 1,\r\n    spaceBetween: 24,\r\n    navigation: {\r\n      nextEl: '.swiper-button-next-comparison-1',\r\n      prevEl: '.swiper-button-prev-comparison-1',\r\n    },\r\n    pagination: {\r\n      el: '.swiper-pagination-comparison-1',\r\n      clickable: true,\r\n    },\r\n    breakpoints: {\r\n      390: {\r\n        slidesPerView: 2,\r\n        spaceBetween: 16,\r\n      },\r\n      768: {\r\n        slidesPerView: 3,\r\n        spaceBetween: 24,\r\n      },\r\n      1024: {\r\n        slidesPerView: 3,\r\n        spaceBetween: 24,\r\n      },\r\n    },\r\n  });\r\n\r\n  let ourWorks = new Swiper('.our-works-slider', {\r\n    slidesPerView: 1,\r\n    spaceBetween: 16,\r\n    grid: {\r\n      rows: 1,\r\n    },\r\n    pagination: {\r\n      el: '.swiper-pagination',\r\n      clickable: true,\r\n      dynamicBullets: true,\r\n    },\r\n    navigation: {\r\n      nextEl: '.swiper-btn-next',\r\n      prevEl: '.swiper-btn-prev',\r\n    },\r\n    breakpoints: {\r\n      390: {\r\n        slidesPerView: 2,\r\n        spaceBetween: 16,\r\n        grid: {\r\n          rows: 1,\r\n        },\r\n      },\r\n      768: {\r\n        slidesPerView: 3,\r\n        spaceBetween: 24,\r\n        grid: {\r\n          rows: 2,\r\n        },\r\n        pagination: {\r\n          dynamicBullets: false,\r\n        },\r\n      },\r\n      1024: {\r\n        slidesPerView: 4,\r\n        spaceBetween: 24,\r\n        grid: {\r\n          rows: 2,\r\n        },\r\n        pagination: {\r\n          dynamicBullets: false,\r\n        },\r\n      },\r\n    },\r\n  });\r\n});\r\n","document.addEventListener('DOMContentLoaded', function () {\r\n  const lightbox = GLightbox({\r\n    selector: '.glightbox',\r\n    touchNavigation: true,\r\n    loop: true,\r\n  });\r\n});\r\n","// ==========================================================================\r\n// Main JavaScript Entry Point\r\n// ==========================================================================\r\n\r\n/**\r\n * Single entry point for all JavaScript functionality\r\n * All modules are imported here to maintain clean dependency management\r\n */\r\n\r\n// Core functionality modules\r\nimport './header.js'; // Header height compensation and navigation\r\nimport './forms.js'; // Complete forms management system (replaces modal-form + utils)\r\nimport './pricing.js'; // Pricing carousel and tabs\r\nimport './slider.js'; // Swiper slider\r\nimport './glightbox.js'; // PhotoSwipe slider\r\n\r\n// ==========================================================================\r\n// Global App Initialization\r\n// ==========================================================================\r\n\r\n/**\r\n * Main application initialization\r\n * Runs after all modules are loaded\r\n */\r\nfunction initializeApp() {\r\n  console.log('🚀 App initialized successfully');\r\n\r\n  // Performance timing\r\n  const loadTime = performance.now();\r\n  console.log(`⚡ JS modules loaded in ${loadTime.toFixed(2)}ms`);\r\n\r\n  // Add any global initialization logic here\r\n  // For example: analytics, global event listeners, etc.\r\n\r\n  // Global smooth scroll for anchor links\r\n  initializeSmoothScroll();\r\n}\r\n\r\n/**\r\n * Initialize smooth scrolling for anchor links\r\n */\r\nfunction initializeSmoothScroll() {\r\n  document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n    anchor.addEventListener('click', function (e) {\r\n      e.preventDefault();\r\n      const target = document.querySelector(this.getAttribute('href'));\r\n      if (target) {\r\n        target.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'start',\r\n        });\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n// Initialize app when DOM is ready\r\ndocument.addEventListener('DOMContentLoaded', initializeApp);\r\n\r\n// ==========================================================================\r\n// Global Error Handling\r\n// ==========================================================================\r\n\r\nwindow.addEventListener('error', function (event) {\r\n  console.error('JavaScript error:', event.error);\r\n\r\n  // In production, you might want to send this to your error tracking service\r\n  // Example: errorTracker.captureException(event.error);\r\n});\r\n\r\nwindow.addEventListener('unhandledrejection', function (event) {\r\n  console.error('Unhandled promise rejection:', event.reason);\r\n});\r\n\r\n// ==========================================================================\r\n// Performance Monitoring (Development)\r\n// ==========================================================================\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  console.log('📊 Development mode - performance monitoring enabled');\r\n\r\n  // Log performance metrics\r\n  window.addEventListener('load', function () {\r\n    const perfData = performance.getEntriesByType('navigation')[0];\r\n    console.log('📈 Performance metrics:', {\r\n      'DOM Content Loaded':\r\n        perfData.domContentLoadedEventEnd -\r\n        perfData.domContentLoadedEventStart +\r\n        'ms',\r\n      'Load Complete': perfData.loadEventEnd - perfData.loadEventStart + 'ms',\r\n      'Total Load Time': perfData.loadEventEnd - perfData.fetchStart + 'ms',\r\n    });\r\n  });\r\n}\r\n\r\n// ==========================================================================\r\n// Export main app for external access if needed\r\n// ==========================================================================\r\n\r\nwindow.OknaApp = {\r\n  version: '1.0.0',\r\n  initialized: false,\r\n  modules: ['header', 'forms', 'pricing'],\r\n};\r\n"],"names":["document","addEventListener","updateBodyPadding","header","querySelector","headerHeight","Math","round","offsetHeight","body","style","paddingTop","resizeTimeout","window","clearTimeout","setTimeout","mobileMenuToggle","mobileMenuOverlay","navLinks","querySelectorAll","toggleMobileMenu","classList","contains","closeMobileMenu","add","overflow","setAttribute","firstNavLink","focus","openMobileMenu","remove","e","preventDefault","stopPropagation","forEach","link","key","innerWidth","navWrapper","container","focusableElements","firstFocusableElement","lastFocusableElement","length","shiftKey","activeElement","trapFocus","$e6c79a397e222007$export$f6cef6fcf9ca4e17","message","type","duration","getElementById","createElement","id","className","appendChild","$e6c79a397e222007$export$daa5e11bf35da0d0","toast","innerHTML","getIcon","$e6c79a397e222007$export$1290c4a291d31c79","toastId","Date","now","random","toString","substr","dataset","progressBar","animationDuration","animationName","animationPlayState","$e6c79a397e222007$export$49ee64cc8ae40679","autoHideTimeout","isPaused","isDestroyed","startTime","totalPausedTime","pauseStartTime","startAutoHideTimer","elapsed","remaining","max","isHovered","handleMouseEnter","pauseToast","handleMouseLeave","resumeToast","_cleanup","removeEventListener","parentNode","timeoutId","parseInt","removeChild","$123588c018d7eca1$var$TELEGRAM_CONFIG","token1","token2","chatId","mode","token","this","$123588c018d7eca1$var$ym","ym","console","log","$123588c018d7eca1$var$FIELD_CONFIG","tel","name","email","$123588c018d7eca1$var$FORM_TYPES","$123588c018d7eca1$var$registeredForms","Map","$123588c018d7eca1$var$formatPhoneInput","match","target","value","replace","result","$123588c018d7eca1$var$validatePhone","phone","test","$123588c018d7eca1$var$getFieldName","$123588c018d7eca1$var$sendForm","formType","encodedMessage","encodeURI","fetch","then","res","json","ok","$123588c018d7eca1$var$handleSubmissionSuccess","localStorage","setItem","$123588c018d7eca1$var$triggerMetrikaGoal","catch","error","$123588c018d7eca1$var$sendToTelegram","goal","$123588c018d7eca1$var$FORM_TYPES_modal","$123588c018d7eca1$var$FORM_TYPES_callback","$123588c018d7eca1$var$FORM_TYPES_mainBlue","$123588c018d7eca1$var$handleFormSubmit","grecaptcha","getResponse","form","textName","errorsContainer","formData","FormData","validation","isValid","errors","entries","trimmedValue","trim","push","$123588c018d7eca1$var$showFormErrors","index","modal","nodeName","$123588c018d7eca1$var$updateModalSuccessTag","$123588c018d7eca1$var$hideModal","reset","phoneInput","mainForm","isFormSent","getItem","formContent","existingTag","tagElement","tag","firstElementChild","insertBefore","firstChild","$123588c018d7eca1$export$baa372ea1b9da9bd","formId","fields","options","warn","config","element","set","$123588c018d7eca1$var$initializeRegisteredForm","input","$123588c018d7eca1$var$initializeModalForm","$123588c018d7eca1$var$createModal","closeIcon","trigger","$123588c018d7eca1$var$showModal","tabs","carouselContainers","switchTab","tabType","display","targetContainer","tab","t","getAttribute","fonts","profileComparison","titles","headers","getMaxHeight","maxHeight","title","h","minHeight","Swiper","slidesPerView","spaceBetween","navigation","nextEl","prevEl","pagination","el","clickable","breakpoints","grid","rows","dynamicBullets","GLightbox","selector","touchNavigation","loop","loadTime","performance","toFixed","anchor","scrollIntoView","behavior","block","event","reason","OknaApp","version","initialized","modules"],"version":3,"file":"d1sa.github.io.e16b5a0a.js.map"}